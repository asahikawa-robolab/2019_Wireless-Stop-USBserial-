Version 3.2 HI-TECH Software Intermediate Code
"24 Controller_Protocol.h
[s S5 :4 `uc 1 :4 `uc 1 ]
[n S5 . lower_data upper_data ]
"23
[u S4 `S5 1 `uc 1 ]
[n S4 . . all_data ]
"32
[s S7 :4 `uc 1 :4 `uc 1 :1 `uc 1 :1 `uc 1 ]
[n S7 . lower_data upper_data UD_error LD_error ]
"38
[s S8 `uc 1 :2 `uc 1 ]
[n S8 . all_data errors ]
"31
[u S6 `S7 1 `S8 1 ]
[n S6 . . . ]
"6
[s S1 `i 1 `i 1 ]
[n S1 . num count ]
"11
[s S2 `i 1 `uc 1 `uc 1 ]
[n S2 . Buffer_count Start_signal_has_come S_flag ]
"17
[s S3 `i 1 `i 1 `uc 1 ]
[n S3 . data_send_count last_signal byte_data_complete ]
[v F53 `(v ~T0 @X0 0 tf1`uc ]
[v F56 `(v ~T0 @X0 0 tf1`uc ]
[v F62 `(v ~T0 @X0 0 tf1`uc ]
[v F65 `(v ~T0 @X0 0 tf1`uc ]
[; ;stdbool.h: 12: typedef unsigned char bool;
[; ;Controller_Protocol.h: 6: typedef struct{
[; ;Controller_Protocol.h: 7: int num;
[; ;Controller_Protocol.h: 8: int count;
[; ;Controller_Protocol.h: 9: }Organize_Parameter;
[; ;Controller_Protocol.h: 11: typedef struct{
[; ;Controller_Protocol.h: 12: int Buffer_count;
[; ;Controller_Protocol.h: 13: bool Start_signal_has_come;
[; ;Controller_Protocol.h: 14: bool S_flag;
[; ;Controller_Protocol.h: 15: }Store_Parameter;
[; ;Controller_Protocol.h: 17: typedef struct{
[; ;Controller_Protocol.h: 18: int data_send_count;
[; ;Controller_Protocol.h: 19: int last_signal;
[; ;Controller_Protocol.h: 20: bool byte_data_complete;
[; ;Controller_Protocol.h: 21: }Send_Parameter;
[; ;Controller_Protocol.h: 23: typedef union{
[; ;Controller_Protocol.h: 24: struct{
[; ;Controller_Protocol.h: 25: unsigned lower_data :4;
[; ;Controller_Protocol.h: 26: unsigned upper_data :4;
[; ;Controller_Protocol.h: 27: };
[; ;Controller_Protocol.h: 28: unsigned char all_data;
[; ;Controller_Protocol.h: 29: }Untreated;
[; ;Controller_Protocol.h: 31: typedef union{
[; ;Controller_Protocol.h: 32: struct{
[; ;Controller_Protocol.h: 33: unsigned lower_data :4;
[; ;Controller_Protocol.h: 34: unsigned upper_data :4;
[; ;Controller_Protocol.h: 35: unsigned UD_error :1;
[; ;Controller_Protocol.h: 36: unsigned LD_error :1;
[; ;Controller_Protocol.h: 37: };
[; ;Controller_Protocol.h: 38: struct{
[; ;Controller_Protocol.h: 39: unsigned char all_data;
[; ;Controller_Protocol.h: 40: unsigned errors :2;
[; ;Controller_Protocol.h: 41: };
[; ;Controller_Protocol.h: 42: }Processed;
"62 Controller_Protocol.h
[v _Buffer0 `S4 ~T0 @X0 + * -> 1 `i -> 2 `i -> 3 `i e ]
[; ;Controller_Protocol.h: 62: Untreated Buffer0[1 * 2 + 3];
"63
[v _RxData0 `S6 ~T0 @X0 -> -> 1 `i `ux e ]
[; ;Controller_Protocol.h: 63: Processed RxData0[1];
"66
[v _Buffer1 `S4 ~T0 @X0 + * -> 1 `i -> 2 `i -> 3 `i e ]
[; ;Controller_Protocol.h: 66: Untreated Buffer1[1 * 2 + 3];
"67
[v _RxData1 `S6 ~T0 @X0 -> -> 1 `i `ux e ]
[; ;Controller_Protocol.h: 67: Processed RxData1[1];
"75
[v _TxData0 `uc ~T0 @X0 -> 4 `i e ]
[; ;Controller_Protocol.h: 75: unsigned char TxData0[4];
[; ;Controller_Protocol.h: 84: extern void Initialize_Parameters(void);
[; ;Controller_Protocol.h: 85: extern void Organize_Datas(Processed *,Untreated *,int,int);
[; ;Controller_Protocol.h: 86: extern bool Store_Datas(Untreated *,unsigned char,int,int);
[; ;Controller_Protocol.h: 87: extern void Send_StartSignal(void (*)(unsigned char),void (*)(bool),bool);
[; ;Controller_Protocol.h: 88: extern void Send_Till_EndSignal(unsigned char *,void (*)(bool),void (*)(bool),int,int);
"15 Controller_Protocol.c
[v _not_of_before_data `uc ~T0 @X0 1 e ]
[; ;Controller_Protocol.c: 15: unsigned char not_of_before_data;
"16
[v _OP `S1 ~T0 @X0 -> 2 `i e ]
[; ;Controller_Protocol.c: 16: Organize_Parameter OP[2];
"17
[v _StP `S2 ~T0 @X0 -> 2 `i e ]
[; ;Controller_Protocol.c: 17: Store_Parameter StP[2];
"18
[v _SeP `S3 ~T0 @X0 -> -> 1 `i `ux e ]
[; ;Controller_Protocol.c: 18: Send_Parameter SeP[1];
"20
[v _Organize_Datas `(v ~T0 @X0 1 ef4`*S6`*S4`i`i ]
{
[; ;Controller_Protocol.c: 20: void Organize_Datas(Processed *RxData,Untreated *Buffer,int number_of_data,int bus_number){
[e :U _Organize_Datas ]
[v _RxData `*S6 ~T0 @X0 1 r1 ]
[v _Buffer `*S4 ~T0 @X0 1 r2 ]
[v _number_of_data `i ~T0 @X0 1 r3 ]
[v _bus_number `i ~T0 @X0 1 r4 ]
[f ]
[; ;Controller_Protocol.c: 21: OP[bus_number].count = 1;
"21
[e = . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 1 `i ]
[; ;Controller_Protocol.c: 22: for(OP[bus_number].num=0;OP[bus_number].num<number_of_data;OP[bus_number].num++){
"22
{
[e = . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 -> 0 `i ]
[e $U 13  ]
[e :U 10 ]
{
[; ;Controller_Protocol.c: 23: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number].count].upper_data;
"23
[e = . . *U + _RxData * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 `x -> -> # *U _RxData `i `x 0 1 . . *U + _Buffer * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 `x -> -> # *U _Buffer `i `x 0 1 ]
[; ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number].count+1].upper_data;
"24
[e = . . *U + _RxData * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 `x -> -> # *U _RxData `i `x 0 0 . . *U + _Buffer * -> + . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 1 `i `x -> -> # *U _Buffer `i `x 0 1 ]
[; ;Controller_Protocol.c: 25: if((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus_number].count+1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
"25
[e $ ! == | -> . . *U + _Buffer * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 `x -> -> # *U _Buffer `i `x 0 1 `i -> . . *U + _Buffer * -> + . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 1 `i `x -> -> # *U _Buffer `i `x 0 0 `i -> 15 `i 14  ]
[e = . . *U + _RxData * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 `x -> -> # *U _RxData `i `x 0 2 -> -> 0 `i `uc ]
[e $U 15  ]
"26
[e :U 14 ]
[; ;Controller_Protocol.c: 26: else RxData[OP[bus_number].num].UD_error = 1;
[e = . . *U + _RxData * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 `x -> -> # *U _RxData `i `x 0 2 -> -> 1 `i `uc ]
[e :U 15 ]
[; ;Controller_Protocol.c: 27: if((Buffer[OP[bus_number].count+1].upper_data | Buffer[OP[bus_number].count+2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
"27
[e $ ! == | -> . . *U + _Buffer * -> + . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 1 `i `x -> -> # *U _Buffer `i `x 0 1 `i -> . . *U + _Buffer * -> + . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 2 `i `x -> -> # *U _Buffer `i `x 0 0 `i -> 15 `i 16  ]
[e = . . *U + _RxData * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 `x -> -> # *U _RxData `i `x 0 3 -> -> 0 `i `uc ]
[e $U 17  ]
"28
[e :U 16 ]
[; ;Controller_Protocol.c: 28: else RxData[OP[bus_number].num].LD_error = 1;
[e = . . *U + _RxData * -> . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 `x -> -> # *U _RxData `i `x 0 3 -> -> 1 `i `uc ]
[e :U 17 ]
[; ;Controller_Protocol.c: 29: OP[bus_number].count += 2;
"29
[e =+ . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 2 `i ]
"30
}
"22
[e ++ . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 -> 1 `i ]
[e :U 13 ]
[e $ < . *U + &U _OP * -> -> _bus_number `ui `ux -> -> # *U &U _OP `ui `ux 0 _number_of_data 10  ]
[e :U 11 ]
"30
}
[; ;Controller_Protocol.c: 30: }
[; ;Controller_Protocol.c: 31: }
"31
[e :UE 9 ]
}
"33
[v _Store_Datas `(uc ~T0 @X0 1 ef4`*S4`uc`i`i ]
{
[; ;Controller_Protocol.c: 33: bool Store_Datas(Untreated *Buffer,unsigned char received_data,int number_of_receive_data,int bus_number){
[e :U _Store_Datas ]
[v _Buffer `*S4 ~T0 @X0 1 r1 ]
[v _received_data `uc ~T0 @X0 1 r2 ]
[v _number_of_receive_data `i ~T0 @X0 1 r3 ]
[v _bus_number `i ~T0 @X0 1 r4 ]
[f ]
[; ;Controller_Protocol.c: 34: if(StP[bus_number].Start_signal_has_come == 0){
"34
[e $ ! == -> . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 1 `i -> 0 `i 19  ]
{
[; ;Controller_Protocol.c: 35: Buffer[StP[bus_number].S_flag].all_data = received_data;
"35
[e = . *U + _Buffer * -> . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 2 `ux -> -> # *U _Buffer `ui `ux 1 _received_data ]
[; ;Controller_Protocol.c: 36: if(StP[bus_number].S_flag == 1){
"36
[e $ ! == -> . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 2 `i -> 1 `i 20  ]
{
[; ;Controller_Protocol.c: 37: if(Buffer[1].lower_data == 5)StP[bus_number].Start_signal_has_come = 1;
"37
[e $ ! == -> . . *U + _Buffer * -> -> 1 `i `x -> -> # *U _Buffer `i `x 0 0 `i -> 5 `i 21  ]
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 1 -> -> 1 `i `uc ]
[e :U 21 ]
[; ;Controller_Protocol.c: 38: StP[bus_number].S_flag = 0;
"38
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 2 -> -> 0 `i `uc ]
"39
}
[; ;Controller_Protocol.c: 39: }
[e $U 22  ]
"40
[e :U 20 ]
[; ;Controller_Protocol.c: 40: else if(Buffer[0].all_data == 'S')StP[bus_number].S_flag = 1;
[e $ ! == -> . *U + _Buffer * -> -> 0 `i `x -> -> # *U _Buffer `i `x 1 `ui -> 83 `ui 23  ]
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 2 -> -> 1 `i `uc ]
[e :U 23 ]
"41
[e :U 22 ]
}
[; ;Controller_Protocol.c: 41: }
[e $U 24  ]
"42
[e :U 19 ]
[; ;Controller_Protocol.c: 42: else{
{
[; ;Controller_Protocol.c: 43: StP[bus_number].Buffer_count++;
"43
[e ++ . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 -> 1 `i ]
[; ;Controller_Protocol.c: 44: Buffer[StP[bus_number].Buffer_count].all_data = received_data;
"44
[e = . *U + _Buffer * -> . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 `x -> -> # *U _Buffer `i `x 1 _received_data ]
[; ;Controller_Protocol.c: 45: if(Buffer[StP[bus_number].Buffer_count].all_data == 'C'){
"45
[e $ ! == -> . *U + _Buffer * -> . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 `x -> -> # *U _Buffer `i `x 1 `ui -> 67 `ui 25  ]
{
[; ;Controller_Protocol.c: 46: if(Buffer[StP[bus_number].Buffer_count-1].upper_data == 3){
"46
[e $ ! == -> . . *U + _Buffer * -> - . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 -> 1 `i `x -> -> # *U _Buffer `i `x 0 1 `i -> 3 `i 26  ]
{
[; ;Controller_Protocol.c: 47: StP[bus_number].Buffer_count = 1;
"47
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 -> 1 `i ]
[; ;Controller_Protocol.c: 48: StP[bus_number].Start_signal_has_come = 0;
"48
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 1 -> -> 0 `i `uc ]
[; ;Controller_Protocol.c: 49: return 1;
"49
[e ) -> -> 1 `i `uc ]
[e $UE 18  ]
"50
}
[e :U 26 ]
"51
}
[e :U 25 ]
[; ;Controller_Protocol.c: 50: }
[; ;Controller_Protocol.c: 51: }
[; ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count == number_of_receive_data - 1){
"52
[e $ ! == . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 - _number_of_receive_data -> 1 `i 27  ]
{
[; ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
"53
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 0 -> 1 `i ]
[; ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
"54
[e = . *U + &U _StP * -> -> _bus_number `ui `ux -> -> # *U &U _StP `ui `ux 1 -> -> 0 `i `uc ]
"55
}
[e :U 27 ]
[; ;Controller_Protocol.c: 55: }
[; ;Controller_Protocol.c: 56: return 0;
"56
[e ) -> -> 0 `i `uc ]
[e $UE 18  ]
"57
}
[e :U 24 ]
[; ;Controller_Protocol.c: 57: }
[; ;Controller_Protocol.c: 58: }
"58
[e :UE 18 ]
}
"60
[v _Send_StartSignal `(v ~T0 @X0 1 ef3`*F53`*F56`uc ]
{
[; ;Controller_Protocol.c: 60: void Send_StartSignal(void (*transmission)(unsigned char),void (*txinterrupt_control)(bool),bool TXIEbit){
[e :U _Send_StartSignal ]
[v F83 `(v ~T0 @X0 0 tf1`uc ]
[v _transmission `*F83 ~T0 @X0 1 r1 ]
[v F86 `(v ~T0 @X0 0 tf1`uc ]
[v _txinterrupt_control `*F86 ~T0 @X0 1 r2 ]
[v _TXIEbit `uc ~T0 @X0 1 r3 ]
[f ]
[; ;Controller_Protocol.c: 61: if(!TXIEbit){
"61
[e $ ! ! != -> _TXIEbit `i -> -> -> 0 `i `uc `i 29  ]
{
[; ;Controller_Protocol.c: 62: transmission('S');
"62
[e ( *U _transmission (1 -> -> 83 `ui `uc ]
[; ;Controller_Protocol.c: 63: not_of_before_data = 0x05;
"63
[e = _not_of_before_data -> -> 5 `i `uc ]
[; ;Controller_Protocol.c: 64: txinterrupt_control(1);
"64
[e ( *U _txinterrupt_control (1 -> -> 1 `i `uc ]
"65
}
[e :U 29 ]
[; ;Controller_Protocol.c: 65: }
[; ;Controller_Protocol.c: 66: }
"66
[e :UE 28 ]
}
"68
[v _Send_Till_EndSignal `(v ~T0 @X0 1 ef5`*uc`*F62`*F65`i`i ]
{
[; ;Controller_Protocol.c: 68: void Send_Till_EndSignal(unsigned char *TxData,void (*transmission)(bool),void (*txinterrupt_control)(bool),int number_of_txdata,int bus_number){
[e :U _Send_Till_EndSignal ]
[v _TxData `*uc ~T0 @X0 1 r1 ]
[v F91 `(v ~T0 @X0 0 tf1`uc ]
[v _transmission `*F91 ~T0 @X0 1 r2 ]
[v F94 `(v ~T0 @X0 0 tf1`uc ]
[v _txinterrupt_control `*F94 ~T0 @X0 1 r3 ]
[v _number_of_txdata `i ~T0 @X0 1 r4 ]
[v _bus_number `i ~T0 @X0 1 r5 ]
[f ]
"69
[v _a `i ~T0 @X0 1 a ]
[; ;Controller_Protocol.c: 69: int a = 0;
[e = _a -> 0 `i ]
[; ;Controller_Protocol.c: 70: if(SeP[bus_number].data_send_count != number_of_txdata){
"70
[e $ ! != . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 0 _number_of_txdata 31  ]
{
[; ;Controller_Protocol.c: 71: if(SeP[bus_number].byte_data_complete == 1){
"71
[e $ ! == -> . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 2 `i -> 1 `i 32  ]
{
[; ;Controller_Protocol.c: 72: a = SeP[bus_number].data_send_count;
"72
[e = _a . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 0 ]
[; ;Controller_Protocol.c: 73: transmission((TxData[a] & 0xf0) | (not_of_before_data & 0x0f));
"73
[e ( *U _transmission (1 -> | & -> *U + _TxData * -> _a `x -> -> # *U _TxData `i `x `i -> 240 `i & -> _not_of_before_data `i -> 15 `i `uc ]
[; ;Controller_Protocol.c: 74: SeP[bus_number].byte_data_complete = 0;
"74
[e = . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 2 -> -> 0 `i `uc ]
"75
}
[; ;Controller_Protocol.c: 75: }
[e $U 33  ]
"76
[e :U 32 ]
[; ;Controller_Protocol.c: 76: else {
{
[; ;Controller_Protocol.c: 77: not_of_before_data = ~TxData[SeP[bus_number].data_send_count];
"77
[e = _not_of_before_data -> ~ -> *U + _TxData * -> . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 0 `x -> -> # *U _TxData `i `x `i `uc ]
[; ;Controller_Protocol.c: 78: a = SeP[bus_number].data_send_count;
"78
[e = _a . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 0 ]
[; ;Controller_Protocol.c: 79: transmission((TxData[a] << 4) | (not_of_before_data >> 4));
"79
[e ( *U _transmission (1 -> | << -> *U + _TxData * -> _a `x -> -> # *U _TxData `i `x `i -> 4 `i >> -> _not_of_before_data `i -> 4 `i `uc ]
[; ;Controller_Protocol.c: 80: SeP[bus_number].byte_data_complete = 1;
"80
[e = . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 2 -> -> 1 `i `uc ]
[; ;Controller_Protocol.c: 81: SeP[bus_number].data_send_count++;
"81
[e ++ . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 0 -> 1 `i ]
"82
}
[e :U 33 ]
"83
}
[; ;Controller_Protocol.c: 82: }
[; ;Controller_Protocol.c: 83: }
[e $U 34  ]
"84
[e :U 31 ]
[; ;Controller_Protocol.c: 84: else{
{
[; ;Controller_Protocol.c: 85: if(SeP[bus_number].last_signal == 0){
"85
[e $ ! == . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 1 -> 0 `i 35  ]
{
[; ;Controller_Protocol.c: 86: transmission(0x30 | (not_of_before_data & 0x0f));
"86
[e ( *U _transmission (1 -> | -> 48 `i & -> _not_of_before_data `i -> 15 `i `uc ]
[; ;Controller_Protocol.c: 87: SeP[bus_number].last_signal++;
"87
[e ++ . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 1 -> 1 `i ]
"88
}
[; ;Controller_Protocol.c: 88: }
[e $U 36  ]
"89
[e :U 35 ]
[; ;Controller_Protocol.c: 89: else if(SeP[bus_number].last_signal == 1){
[e $ ! == . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 1 -> 1 `i 37  ]
{
[; ;Controller_Protocol.c: 90: transmission('C');
"90
[e ( *U _transmission (1 -> -> 67 `ui `uc ]
[; ;Controller_Protocol.c: 91: SeP[bus_number].last_signal++;
"91
[e ++ . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 1 -> 1 `i ]
"92
}
[; ;Controller_Protocol.c: 92: }
[e $U 38  ]
"93
[e :U 37 ]
[; ;Controller_Protocol.c: 93: else {
{
[; ;Controller_Protocol.c: 94: SeP[bus_number].last_signal = 0;
"94
[e = . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 1 -> 0 `i ]
[; ;Controller_Protocol.c: 95: SeP[bus_number].data_send_count = 0;
"95
[e = . *U + &U _SeP * -> -> _bus_number `ui `ux -> -> # *U &U _SeP `ui `ux 0 -> 0 `i ]
[; ;Controller_Protocol.c: 96: txinterrupt_control(0);
"96
[e ( *U _txinterrupt_control (1 -> -> 0 `i `uc ]
"97
}
[e :U 38 ]
[e :U 36 ]
"98
}
[e :U 34 ]
[; ;Controller_Protocol.c: 97: }
[; ;Controller_Protocol.c: 98: }
[; ;Controller_Protocol.c: 99: }
"99
[e :UE 30 ]
}
"105
[v _Initialize_Parameters `(v ~T0 @X0 1 ef ]
{
[; ;Controller_Protocol.c: 105: extern void Initialize_Parameters(void){
[e :U _Initialize_Parameters ]
[f ]
"106
[v F100 `i ~T0 @X0 1 s i ]
[; ;Controller_Protocol.c: 106: static int i;
[; ;Controller_Protocol.c: 108: for(i=0;i<2;i++)OP[i].count = 1;
"108
{
[e = F100 -> 0 `i ]
[e $ < F100 -> 2 `i 40  ]
[e $U 41  ]
[e :U 40 ]
[e = . *U + &U _OP * -> -> F100 `ui `ux -> -> # *U &U _OP `ui `ux 1 -> 1 `i ]
[e ++ F100 -> 1 `i ]
[e $ < F100 -> 2 `i 40  ]
[e :U 41 ]
}
[; ;Controller_Protocol.c: 109: for(i=0;i<1;i++){
"109
{
[e = F100 -> 0 `i ]
[e $ < F100 -> 1 `i 43  ]
[e $U 44  ]
[e :U 43 ]
{
[; ;Controller_Protocol.c: 110: StP[i].Buffer_count = 1;
"110
[e = . *U + &U _StP * -> -> F100 `ui `ux -> -> # *U &U _StP `ui `ux 0 -> 1 `i ]
[; ;Controller_Protocol.c: 111: SeP[i].byte_data_complete = 1;
"111
[e = . *U + &U _SeP * -> -> F100 `ui `ux -> -> # *U &U _SeP `ui `ux 2 -> -> 1 `i `uc ]
"112
}
"109
[e ++ F100 -> 1 `i ]
[e $ < F100 -> 1 `i 43  ]
[e :U 44 ]
"112
}
[; ;Controller_Protocol.c: 112: }
[; ;Controller_Protocol.c: 113: }
"113
[e :UE 39 ]
}
