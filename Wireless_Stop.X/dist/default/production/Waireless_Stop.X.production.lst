

Microchip Technology PIC LITE Macro Assembler V1.40 build -251452761 
                                                                                               Fri Aug 16 12:17:29 2019

Microchip Technology Omniscient Code Generator v1.40 (Free mode) build 201612010151
     1                           	processor	16F15376
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	clrtext,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.40
    24                           ; Generated 01/12/2016 GMT
    25                           ; 
    26                           ; Copyright Â© 2016, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F15376 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  009B                     	;# 
    85  009B                     	;# 
    86  009C                     	;# 
    87  009D                     	;# 
    88  009E                     	;# 
    89  009F                     	;# 
    90  0119                     	;# 
    91  0119                     	;# 
    92  0119                     	;# 
    93  011A                     	;# 
    94  011A                     	;# 
    95  011A                     	;# 
    96  011B                     	;# 
    97  011B                     	;# 
    98  011B                     	;# 
    99  011B                     	;# 
   100  011B                     	;# 
   101  011C                     	;# 
   102  011C                     	;# 
   103  011C                     	;# 
   104  011D                     	;# 
   105  011D                     	;# 
   106  011D                     	;# 
   107  011E                     	;# 
   108  011E                     	;# 
   109  011E                     	;# 
   110  011F                     	;# 
   111  011F                     	;# 
   112  011F                     	;# 
   113  011F                     	;# 
   114  011F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  018E                     	;# 
   118  018F                     	;# 
   119  0190                     	;# 
   120  0191                     	;# 
   121  0192                     	;# 
   122  0196                     	;# 
   123  0197                     	;# 
   124  0198                     	;# 
   125  0199                     	;# 
   126  019A                     	;# 
   127  019B                     	;# 
   128  019C                     	;# 
   129  020C                     	;# 
   130  020C                     	;# 
   131  020D                     	;# 
   132  020E                     	;# 
   133  020F                     	;# 
   134  020F                     	;# 
   135  0210                     	;# 
   136  0210                     	;# 
   137  0211                     	;# 
   138  0211                     	;# 
   139  028C                     	;# 
   140  028C                     	;# 
   141  028D                     	;# 
   142  028D                     	;# 
   143  028E                     	;# 
   144  028F                     	;# 
   145  0290                     	;# 
   146  0291                     	;# 
   147  030C                     	;# 
   148  030C                     	;# 
   149  030D                     	;# 
   150  030E                     	;# 
   151  030F                     	;# 
   152  0310                     	;# 
   153  0310                     	;# 
   154  0311                     	;# 
   155  0312                     	;# 
   156  0313                     	;# 
   157  0314                     	;# 
   158  0315                     	;# 
   159  0316                     	;# 
   160  0318                     	;# 
   161  0319                     	;# 
   162  031A                     	;# 
   163  031C                     	;# 
   164  031D                     	;# 
   165  031E                     	;# 
   166  038C                     	;# 
   167  038D                     	;# 
   168  038E                     	;# 
   169  058C                     	;# 
   170  058C                     	;# 
   171  058D                     	;# 
   172  058E                     	;# 
   173  058F                     	;# 
   174  058F                     	;# 
   175  0590                     	;# 
   176  0591                     	;# 
   177  0592                     	;# 
   178  0593                     	;# 
   179  059C                     	;# 
   180  059C                     	;# 
   181  059D                     	;# 
   182  059D                     	;# 
   183  059E                     	;# 
   184  059F                     	;# 
   185  060C                     	;# 
   186  060D                     	;# 
   187  060E                     	;# 
   188  060F                     	;# 
   189  0610                     	;# 
   190  0611                     	;# 
   191  0612                     	;# 
   192  0613                     	;# 
   193  0614                     	;# 
   194  070C                     	;# 
   195  070D                     	;# 
   196  070E                     	;# 
   197  070F                     	;# 
   198  0710                     	;# 
   199  0711                     	;# 
   200  0712                     	;# 
   201  0713                     	;# 
   202  0716                     	;# 
   203  0717                     	;# 
   204  0718                     	;# 
   205  0719                     	;# 
   206  071A                     	;# 
   207  071B                     	;# 
   208  071C                     	;# 
   209  071D                     	;# 
   210  0796                     	;# 
   211  0797                     	;# 
   212  0798                     	;# 
   213  0799                     	;# 
   214  079A                     	;# 
   215  079B                     	;# 
   216  080C                     	;# 
   217  080D                     	;# 
   218  080E                     	;# 
   219  080F                     	;# 
   220  0810                     	;# 
   221  0811                     	;# 
   222  0812                     	;# 
   223  0813                     	;# 
   224  0814                     	;# 
   225  081A                     	;# 
   226  081A                     	;# 
   227  081B                     	;# 
   228  081C                     	;# 
   229  081C                     	;# 
   230  081D                     	;# 
   231  081E                     	;# 
   232  081F                     	;# 
   233  088C                     	;# 
   234  088D                     	;# 
   235  088E                     	;# 
   236  088F                     	;# 
   237  0890                     	;# 
   238  0891                     	;# 
   239  0892                     	;# 
   240  0893                     	;# 
   241  0895                     	;# 
   242  0896                     	;# 
   243  090C                     	;# 
   244  090E                     	;# 
   245  090F                     	;# 
   246  091F                     	;# 
   247  098F                     	;# 
   248  098F                     	;# 
   249  0990                     	;# 
   250  0991                     	;# 
   251  0992                     	;# 
   252  0993                     	;# 
   253  0994                     	;# 
   254  0995                     	;# 
   255  0996                     	;# 
   256  0997                     	;# 
   257  0A19                     	;# 
   258  0A19                     	;# 
   259  0A1A                     	;# 
   260  0A1A                     	;# 
   261  0A1B                     	;# 
   262  0A1B                     	;# 
   263  0A1B                     	;# 
   264  0A1C                     	;# 
   265  0A1C                     	;# 
   266  0A1D                     	;# 
   267  0A1D                     	;# 
   268  0A1E                     	;# 
   269  0A1E                     	;# 
   270  0A1F                     	;# 
   271  0A1F                     	;# 
   272  0A1F                     	;# 
   273  1E0F                     	;# 
   274  1E10                     	;# 
   275  1E11                     	;# 
   276  1E12                     	;# 
   277  1E13                     	;# 
   278  1E14                     	;# 
   279  1E15                     	;# 
   280  1E16                     	;# 
   281  1E17                     	;# 
   282  1E18                     	;# 
   283  1E19                     	;# 
   284  1E1A                     	;# 
   285  1E1B                     	;# 
   286  1E1C                     	;# 
   287  1E1D                     	;# 
   288  1E1E                     	;# 
   289  1E1F                     	;# 
   290  1E20                     	;# 
   291  1E21                     	;# 
   292  1E22                     	;# 
   293  1E23                     	;# 
   294  1E24                     	;# 
   295  1E25                     	;# 
   296  1E26                     	;# 
   297  1E27                     	;# 
   298  1E28                     	;# 
   299  1E29                     	;# 
   300  1E2A                     	;# 
   301  1E2B                     	;# 
   302  1E2C                     	;# 
   303  1E2D                     	;# 
   304  1E2E                     	;# 
   305  1E2F                     	;# 
   306  1E30                     	;# 
   307  1E31                     	;# 
   308  1E32                     	;# 
   309  1E33                     	;# 
   310  1E34                     	;# 
   311  1E35                     	;# 
   312  1E36                     	;# 
   313  1E37                     	;# 
   314  1E8F                     	;# 
   315  1E90                     	;# 
   316  1E91                     	;# 
   317  1E92                     	;# 
   318  1E93                     	;# 
   319  1E9C                     	;# 
   320  1EA1                     	;# 
   321  1EA2                     	;# 
   322  1EB1                     	;# 
   323  1EBB                     	;# 
   324  1EBC                     	;# 
   325  1EBD                     	;# 
   326  1EBE                     	;# 
   327  1EC3                     	;# 
   328  1EC5                     	;# 
   329  1EC6                     	;# 
   330  1EC7                     	;# 
   331  1EC8                     	;# 
   332  1EC9                     	;# 
   333  1ECA                     	;# 
   334  1ECB                     	;# 
   335  1ECC                     	;# 
   336  1ECD                     	;# 
   337  1ECE                     	;# 
   338  1F10                     	;# 
   339  1F11                     	;# 
   340  1F12                     	;# 
   341  1F13                     	;# 
   342  1F14                     	;# 
   343  1F15                     	;# 
   344  1F16                     	;# 
   345  1F17                     	;# 
   346  1F18                     	;# 
   347  1F19                     	;# 
   348  1F1A                     	;# 
   349  1F1B                     	;# 
   350  1F1C                     	;# 
   351  1F1D                     	;# 
   352  1F1E                     	;# 
   353  1F1F                     	;# 
   354  1F20                     	;# 
   355  1F21                     	;# 
   356  1F22                     	;# 
   357  1F23                     	;# 
   358  1F24                     	;# 
   359  1F25                     	;# 
   360  1F26                     	;# 
   361  1F27                     	;# 
   362  1F28                     	;# 
   363  1F29                     	;# 
   364  1F2A                     	;# 
   365  1F2B                     	;# 
   366  1F2C                     	;# 
   367  1F2D                     	;# 
   368  1F2E                     	;# 
   369  1F2F                     	;# 
   370  1F30                     	;# 
   371  1F31                     	;# 
   372  1F32                     	;# 
   373  1F38                     	;# 
   374  1F39                     	;# 
   375  1F3A                     	;# 
   376  1F3B                     	;# 
   377  1F3C                     	;# 
   378  1F3D                     	;# 
   379  1F3E                     	;# 
   380  1F3F                     	;# 
   381  1F43                     	;# 
   382  1F44                     	;# 
   383  1F45                     	;# 
   384  1F46                     	;# 
   385  1F47                     	;# 
   386  1F48                     	;# 
   387  1F49                     	;# 
   388  1F4A                     	;# 
   389  1F4E                     	;# 
   390  1F4F                     	;# 
   391  1F50                     	;# 
   392  1F51                     	;# 
   393  1F52                     	;# 
   394  1F53                     	;# 
   395  1F54                     	;# 
   396  1F55                     	;# 
   397  1F59                     	;# 
   398  1F5A                     	;# 
   399  1F5B                     	;# 
   400  1F5C                     	;# 
   401  1F5D                     	;# 
   402  1F64                     	;# 
   403  1F65                     	;# 
   404  1F66                     	;# 
   405  1F67                     	;# 
   406  1F68                     	;# 
   407  1F69                     	;# 
   408  1F6A                     	;# 
   409  1F6B                     	;# 
   410  1FE4                     	;# 
   411  1FE5                     	;# 
   412  1FE6                     	;# 
   413  1FE7                     	;# 
   414  1FE8                     	;# 
   415  1FE8                     	;# 
   416  1FE9                     	;# 
   417  1FEA                     	;# 
   418  1FEB                     	;# 
   419  1FED                     	;# 
   420  1FEE                     	;# 
   421  1FEF                     	;# 
   422  0000                     	;# 
   423  0001                     	;# 
   424  0002                     	;# 
   425  0003                     	;# 
   426  0004                     	;# 
   427  0005                     	;# 
   428  0006                     	;# 
   429  0007                     	;# 
   430  0008                     	;# 
   431  0009                     	;# 
   432  000A                     	;# 
   433  000B                     	;# 
   434  000C                     	;# 
   435  000D                     	;# 
   436  000E                     	;# 
   437  000F                     	;# 
   438  0010                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0018                     	;# 
   445  0019                     	;# 
   446  001A                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  009B                     	;# 
   450  009B                     	;# 
   451  009C                     	;# 
   452  009D                     	;# 
   453  009E                     	;# 
   454  009F                     	;# 
   455  0119                     	;# 
   456  0119                     	;# 
   457  0119                     	;# 
   458  011A                     	;# 
   459  011A                     	;# 
   460  011A                     	;# 
   461  011B                     	;# 
   462  011B                     	;# 
   463  011B                     	;# 
   464  011B                     	;# 
   465  011B                     	;# 
   466  011C                     	;# 
   467  011C                     	;# 
   468  011C                     	;# 
   469  011D                     	;# 
   470  011D                     	;# 
   471  011D                     	;# 
   472  011E                     	;# 
   473  011E                     	;# 
   474  011E                     	;# 
   475  011F                     	;# 
   476  011F                     	;# 
   477  011F                     	;# 
   478  011F                     	;# 
   479  011F                     	;# 
   480  018C                     	;# 
   481  018D                     	;# 
   482  018E                     	;# 
   483  018F                     	;# 
   484  0190                     	;# 
   485  0191                     	;# 
   486  0192                     	;# 
   487  0196                     	;# 
   488  0197                     	;# 
   489  0198                     	;# 
   490  0199                     	;# 
   491  019A                     	;# 
   492  019B                     	;# 
   493  019C                     	;# 
   494  020C                     	;# 
   495  020C                     	;# 
   496  020D                     	;# 
   497  020E                     	;# 
   498  020F                     	;# 
   499  020F                     	;# 
   500  0210                     	;# 
   501  0210                     	;# 
   502  0211                     	;# 
   503  0211                     	;# 
   504  028C                     	;# 
   505  028C                     	;# 
   506  028D                     	;# 
   507  028D                     	;# 
   508  028E                     	;# 
   509  028F                     	;# 
   510  0290                     	;# 
   511  0291                     	;# 
   512  030C                     	;# 
   513  030C                     	;# 
   514  030D                     	;# 
   515  030E                     	;# 
   516  030F                     	;# 
   517  0310                     	;# 
   518  0310                     	;# 
   519  0311                     	;# 
   520  0312                     	;# 
   521  0313                     	;# 
   522  0314                     	;# 
   523  0315                     	;# 
   524  0316                     	;# 
   525  0318                     	;# 
   526  0319                     	;# 
   527  031A                     	;# 
   528  031C                     	;# 
   529  031D                     	;# 
   530  031E                     	;# 
   531  038C                     	;# 
   532  038D                     	;# 
   533  038E                     	;# 
   534  058C                     	;# 
   535  058C                     	;# 
   536  058D                     	;# 
   537  058E                     	;# 
   538  058F                     	;# 
   539  058F                     	;# 
   540  0590                     	;# 
   541  0591                     	;# 
   542  0592                     	;# 
   543  0593                     	;# 
   544  059C                     	;# 
   545  059C                     	;# 
   546  059D                     	;# 
   547  059D                     	;# 
   548  059E                     	;# 
   549  059F                     	;# 
   550  060C                     	;# 
   551  060D                     	;# 
   552  060E                     	;# 
   553  060F                     	;# 
   554  0610                     	;# 
   555  0611                     	;# 
   556  0612                     	;# 
   557  0613                     	;# 
   558  0614                     	;# 
   559  070C                     	;# 
   560  070D                     	;# 
   561  070E                     	;# 
   562  070F                     	;# 
   563  0710                     	;# 
   564  0711                     	;# 
   565  0712                     	;# 
   566  0713                     	;# 
   567  0716                     	;# 
   568  0717                     	;# 
   569  0718                     	;# 
   570  0719                     	;# 
   571  071A                     	;# 
   572  071B                     	;# 
   573  071C                     	;# 
   574  071D                     	;# 
   575  0796                     	;# 
   576  0797                     	;# 
   577  0798                     	;# 
   578  0799                     	;# 
   579  079A                     	;# 
   580  079B                     	;# 
   581  080C                     	;# 
   582  080D                     	;# 
   583  080E                     	;# 
   584  080F                     	;# 
   585  0810                     	;# 
   586  0811                     	;# 
   587  0812                     	;# 
   588  0813                     	;# 
   589  0814                     	;# 
   590  081A                     	;# 
   591  081A                     	;# 
   592  081B                     	;# 
   593  081C                     	;# 
   594  081C                     	;# 
   595  081D                     	;# 
   596  081E                     	;# 
   597  081F                     	;# 
   598  088C                     	;# 
   599  088D                     	;# 
   600  088E                     	;# 
   601  088F                     	;# 
   602  0890                     	;# 
   603  0891                     	;# 
   604  0892                     	;# 
   605  0893                     	;# 
   606  0895                     	;# 
   607  0896                     	;# 
   608  090C                     	;# 
   609  090E                     	;# 
   610  090F                     	;# 
   611  091F                     	;# 
   612  098F                     	;# 
   613  098F                     	;# 
   614  0990                     	;# 
   615  0991                     	;# 
   616  0992                     	;# 
   617  0993                     	;# 
   618  0994                     	;# 
   619  0995                     	;# 
   620  0996                     	;# 
   621  0997                     	;# 
   622  0A19                     	;# 
   623  0A19                     	;# 
   624  0A1A                     	;# 
   625  0A1A                     	;# 
   626  0A1B                     	;# 
   627  0A1B                     	;# 
   628  0A1B                     	;# 
   629  0A1C                     	;# 
   630  0A1C                     	;# 
   631  0A1D                     	;# 
   632  0A1D                     	;# 
   633  0A1E                     	;# 
   634  0A1E                     	;# 
   635  0A1F                     	;# 
   636  0A1F                     	;# 
   637  0A1F                     	;# 
   638  1E0F                     	;# 
   639  1E10                     	;# 
   640  1E11                     	;# 
   641  1E12                     	;# 
   642  1E13                     	;# 
   643  1E14                     	;# 
   644  1E15                     	;# 
   645  1E16                     	;# 
   646  1E17                     	;# 
   647  1E18                     	;# 
   648  1E19                     	;# 
   649  1E1A                     	;# 
   650  1E1B                     	;# 
   651  1E1C                     	;# 
   652  1E1D                     	;# 
   653  1E1E                     	;# 
   654  1E1F                     	;# 
   655  1E20                     	;# 
   656  1E21                     	;# 
   657  1E22                     	;# 
   658  1E23                     	;# 
   659  1E24                     	;# 
   660  1E25                     	;# 
   661  1E26                     	;# 
   662  1E27                     	;# 
   663  1E28                     	;# 
   664  1E29                     	;# 
   665  1E2A                     	;# 
   666  1E2B                     	;# 
   667  1E2C                     	;# 
   668  1E2D                     	;# 
   669  1E2E                     	;# 
   670  1E2F                     	;# 
   671  1E30                     	;# 
   672  1E31                     	;# 
   673  1E32                     	;# 
   674  1E33                     	;# 
   675  1E34                     	;# 
   676  1E35                     	;# 
   677  1E36                     	;# 
   678  1E37                     	;# 
   679  1E8F                     	;# 
   680  1E90                     	;# 
   681  1E91                     	;# 
   682  1E92                     	;# 
   683  1E93                     	;# 
   684  1E9C                     	;# 
   685  1EA1                     	;# 
   686  1EA2                     	;# 
   687  1EB1                     	;# 
   688  1EBB                     	;# 
   689  1EBC                     	;# 
   690  1EBD                     	;# 
   691  1EBE                     	;# 
   692  1EC3                     	;# 
   693  1EC5                     	;# 
   694  1EC6                     	;# 
   695  1EC7                     	;# 
   696  1EC8                     	;# 
   697  1EC9                     	;# 
   698  1ECA                     	;# 
   699  1ECB                     	;# 
   700  1ECC                     	;# 
   701  1ECD                     	;# 
   702  1ECE                     	;# 
   703  1F10                     	;# 
   704  1F11                     	;# 
   705  1F12                     	;# 
   706  1F13                     	;# 
   707  1F14                     	;# 
   708  1F15                     	;# 
   709  1F16                     	;# 
   710  1F17                     	;# 
   711  1F18                     	;# 
   712  1F19                     	;# 
   713  1F1A                     	;# 
   714  1F1B                     	;# 
   715  1F1C                     	;# 
   716  1F1D                     	;# 
   717  1F1E                     	;# 
   718  1F1F                     	;# 
   719  1F20                     	;# 
   720  1F21                     	;# 
   721  1F22                     	;# 
   722  1F23                     	;# 
   723  1F24                     	;# 
   724  1F25                     	;# 
   725  1F26                     	;# 
   726  1F27                     	;# 
   727  1F28                     	;# 
   728  1F29                     	;# 
   729  1F2A                     	;# 
   730  1F2B                     	;# 
   731  1F2C                     	;# 
   732  1F2D                     	;# 
   733  1F2E                     	;# 
   734  1F2F                     	;# 
   735  1F30                     	;# 
   736  1F31                     	;# 
   737  1F32                     	;# 
   738  1F38                     	;# 
   739  1F39                     	;# 
   740  1F3A                     	;# 
   741  1F3B                     	;# 
   742  1F3C                     	;# 
   743  1F3D                     	;# 
   744  1F3E                     	;# 
   745  1F3F                     	;# 
   746  1F43                     	;# 
   747  1F44                     	;# 
   748  1F45                     	;# 
   749  1F46                     	;# 
   750  1F47                     	;# 
   751  1F48                     	;# 
   752  1F49                     	;# 
   753  1F4A                     	;# 
   754  1F4E                     	;# 
   755  1F4F                     	;# 
   756  1F50                     	;# 
   757  1F51                     	;# 
   758  1F52                     	;# 
   759  1F53                     	;# 
   760  1F54                     	;# 
   761  1F55                     	;# 
   762  1F59                     	;# 
   763  1F5A                     	;# 
   764  1F5B                     	;# 
   765  1F5C                     	;# 
   766  1F5D                     	;# 
   767  1F64                     	;# 
   768  1F65                     	;# 
   769  1F66                     	;# 
   770  1F67                     	;# 
   771  1F68                     	;# 
   772  1F69                     	;# 
   773  1F6A                     	;# 
   774  1F6B                     	;# 
   775  1FE4                     	;# 
   776  1FE5                     	;# 
   777  1FE6                     	;# 
   778  1FE7                     	;# 
   779  1FE8                     	;# 
   780  1FE8                     	;# 
   781  1FE9                     	;# 
   782  1FEA                     	;# 
   783  1FEB                     	;# 
   784  1FED                     	;# 
   785  1FEE                     	;# 
   786  1FEF                     	;# 
   787  000B                     _INTCONbits	set	11
   788  0018                     _LATA	set	24
   789  0018                     _LATAbits	set	24
   790  0019                     _LATB	set	25
   791  001A                     _LATC	set	26
   792  001A                     _LATCbits	set	26
   793  001B                     _LATD	set	27
   794  001B                     _LATDbits	set	27
   795  001C                     _LATE	set	28
   796  0012                     _TRISA	set	18
   797  0013                     _TRISB	set	19
   798  0014                     _TRISC	set	20
   799  0015                     _TRISD	set	21
   800  0015                     _TRISDbits	set	21
   801  0016                     _TRISE	set	22
   802  005F                     _GIE	set	95
   803  011F                     _BAUD1CON	set	287
   804  0119                     _RC1REG	set	281
   805  011D                     _RC1STA	set	285
   806  011C                     _SP1BRGH	set	284
   807  011B                     _SP1BRGL	set	283
   808  011E                     _TX1STA	set	286
   809  0211                     _T1CLK	set	529
   810  020E                     _T1CON	set	526
   811  020E                     _T1CONbits	set	526
   812  0210                     _T1GATE	set	528
   813  020F                     _T1GCON	set	527
   814  0719                     _PIE3bits	set	1817
   815  070F                     _PIR3bits	set	1807
   816  088D                     _OSCCON1	set	2189
   817  088F                     _OSCCON3	set	2191
   818  0891                     _OSCEN	set	2193
   819  0893                     _OSCFRQ	set	2195
   820  0890                     _OSCSTAT	set	2192
   821  0890                     _OSCSTATbits	set	2192
   822  0892                     _OSCTUNE	set	2194
   823  0A1F                     _BAUD2CON	set	2591
   824  0A19                     _RC2REG	set	2585
   825  0A1D                     _RC2STA	set	2589
   826  0A1C                     _SP2BRGH	set	2588
   827  0A1B                     _SP2BRGL	set	2587
   828  0A1A                     _TX2REG	set	2586
   829  0A1E                     _TX2STA	set	2590
   830  1E8F                     _PPSLOCK	set	7823
   831  1E8F                     _PPSLOCKbits	set	7823
   832  1ECB                     _RX1DTPPSbits	set	7883
   833  1ECD                     _RX2DTPPSbits	set	7885
   834  1F38                     _ANSELA	set	7992
   835  1F43                     _ANSELB	set	8003
   836  1F4E                     _ANSELC	set	8014
   837  1F59                     _ANSELD	set	8025
   838  1F64                     _ANSELE	set	8036
   839  1F3F                     _IOCAFbits	set	7999
   840  1F3E                     _IOCANbits	set	7998
   841  1F3D                     _IOCAPbits	set	7997
   842  1F3A                     _ODCONA	set	7994
   843  1F45                     _ODCONB	set	8005
   844  1F50                     _ODCONC	set	8016
   845  1F5B                     _ODCOND	set	8027
   846  1F66                     _ODCONE	set	8038
   847  1F39                     _WPUA	set	7993
   848  1F44                     _WPUB	set	8004
   849  1F4F                     _WPUC	set	8015
   850  1F5A                     _WPUD	set	8026
   851  1F65                     _WPUE	set	8037
   852                           
   853                           ; #config settings
   854  0000                     
   855                           	psect	cinit
   856  0065                     start_initialization:	
   857  0065                     __initialization:	
   858                           
   859                           ; Clear objects allocated to BANK0
   860  0065  3020               	movlw	low __pbssBANK0
   861  0066  0084               	movwf	4
   862  0067  3000               	movlw	high __pbssBANK0
   863  0068  0085               	movwf	5
   864  0069  302B               	movlw	43
   865  006A  3185  2571         	fcall	clear_ram0
   866  006C                     end_of_initialization:	
   867                           ;End of C runtime variable initialization code
   868                           
   869  006C                     __end_of__initialization:	
   870  006C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   871  006D  0140               	movlb	0
   872  006E  3184  2CEB         	ljmp	_main	;jump to C main() function
   873                           
   874                           	psect	bssBANK0
   875  0020                     __pbssBANK0:	
   876  0020                     _OP:	
   877  0020                     	ds	8
   878  0028                     _StP:	
   879  0028                     	ds	8
   880  0030                     _SeP:	
   881  0030                     	ds	5
   882  0035                     Initialize_Parameters@i:	
   883  0035                     	ds	2
   884  0037                     _I2C_status:	
   885  0037                     	ds	1
   886  0038                     _not_of_before_data:	
   887  0038                     	ds	1
   888  0039                     _Buffer0:	
   889  0039                     	ds	5
   890  003E                     _Buffer1:	
   891  003E                     	ds	5
   892  0043                     _TxData0:	
   893  0043                     	ds	4
   894  0047                     _RxData0:	
   895  0047                     	ds	2
   896  0049                     _RxData1:	
   897  0049                     	ds	2
   898                           
   899                           	psect	clrtext
   900  0571                     clear_ram0:	
   901                           ;	Called with FSR0 containing the base address, and
   902                           ;	WREG with the size to clear
   903                           
   904  0571  0064               	clrwdt	;clear the watchdog before getting into this loop
   905  0572                     clrloop0:	
   906  0572  0180               	clrf	0	;clear RAM location pointed to by FSR
   907  0573  3101               	addfsr 0,1
   908  0574  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
   909  0575  2D72               	goto	clrloop0	;have we reached the end yet?
   910  0576  3400               	retlw	0	;all done for this memory range, return
   911                           
   912                           	psect	cstackCOMMON
   913  0070                     __pcstackCOMMON:	
   914  0070                     ?_Initialize_Parameters:	
   915  0070                     ?_Store_Datas:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ?_EUSART_Write:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_EUSART_TxInterrupt_Control:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ?_PIN_MANAGER_Initialize:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_setup_TMR1:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_main:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_INTERRUPT_InterruptManager:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?i1___bmul:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     EUSART_Write@txData:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     EUSART_TxInterrupt_Control@enable_or_disable:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     Store_Datas@received_data:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     i1___bmul@multiplicand:	
   949                           ; 1 bytes @ 0x0
   950                           
   951                           
   952                           ; 1 bytes @ 0x0
   953  0070                     	ds	1
   954  0071                     ??_EUSART_Write:	
   955  0071                     ??_EUSART_TxInterrupt_Control:	
   956                           ; 1 bytes @ 0x1
   957                           
   958  0071                     ??i1___bmul:	
   959                           ; 1 bytes @ 0x1
   960                           
   961  0071                     Store_Datas@number_of_receive_data:	
   962                           ; 1 bytes @ 0x1
   963                           
   964                           
   965                           ; 2 bytes @ 0x1
   966  0071                     	ds	1
   967  0072                     i1___bmul@multiplier:	
   968                           
   969                           ; 1 bytes @ 0x2
   970  0072                     	ds	1
   971  0073                     i1___bmul@product:	
   972  0073                     Store_Datas@bus_number:	
   973                           ; 1 bytes @ 0x3
   974                           
   975                           
   976                           ; 2 bytes @ 0x3
   977  0073                     	ds	1
   978  0074                     ?_Send_Till_EndSignal:	
   979  0074                     Send_Till_EndSignal@transmission:	
   980                           ; 1 bytes @ 0x4
   981                           
   982                           
   983                           ; 2 bytes @ 0x4
   984  0074                     	ds	1
   985  0075                     ??_Store_Datas:	
   986                           
   987                           ; 1 bytes @ 0x5
   988  0075                     	ds	1
   989  0076                     Send_Till_EndSignal@txinterrupt_control:	
   990                           
   991                           ; 2 bytes @ 0x6
   992  0076                     	ds	2
   993  0078                     Send_Till_EndSignal@number_of_txdata:	
   994                           
   995                           ; 2 bytes @ 0x8
   996  0078                     	ds	2
   997  007A                     Store_Datas@Buffer:	
   998  007A                     Send_Till_EndSignal@bus_number:	
   999                           ; 1 bytes @ 0xA
  1000                           
  1001                           
  1002                           ; 2 bytes @ 0xA
  1003  007A                     	ds	2
  1004  007C                     ??_INTERRUPT_InterruptManager:	
  1005                           
  1006                           ; 1 bytes @ 0xC
  1007  007C                     	ds	2
  1008                           
  1009                           	psect	cstackBANK0
  1010  004B                     __pcstackBANK0:	
  1011  004B                     ??_Send_Till_EndSignal:	
  1012                           
  1013                           ; 1 bytes @ 0x0
  1014  004B                     	ds	4
  1015  004F                     Send_Till_EndSignal@a:	
  1016                           
  1017                           ; 2 bytes @ 0x4
  1018  004F                     	ds	2
  1019  0051                     Send_Till_EndSignal@TxData:	
  1020                           
  1021                           ; 1 bytes @ 0x6
  1022  0051                     	ds	1
  1023  0052                     ?_Organize_Datas:	
  1024  0052                     ??_PIN_MANAGER_Initialize:	
  1025                           ; 1 bytes @ 0x7
  1026                           
  1027  0052                     ??_setup_TMR1:	
  1028                           ; 1 bytes @ 0x7
  1029                           
  1030  0052                     ?___bmul:	
  1031                           ; 1 bytes @ 0x7
  1032                           
  1033  0052                     PIN_MANAGER_Initialize@state:	
  1034                           ; 1 bytes @ 0x7
  1035                           
  1036  0052                     Organize_Datas@Buffer:	
  1037                           ; 1 bytes @ 0x7
  1038                           
  1039  0052                     ___bmul@multiplicand:	
  1040                           ; 1 bytes @ 0x7
  1041                           
  1042                           
  1043                           ; 1 bytes @ 0x7
  1044  0052                     	ds	1
  1045  0053                     ??___bmul:	
  1046  0053                     Organize_Datas@number_of_data:	
  1047                           ; 1 bytes @ 0x8
  1048                           
  1049                           
  1050                           ; 2 bytes @ 0x8
  1051  0053                     	ds	1
  1052  0054                     ___bmul@product:	
  1053                           
  1054                           ; 1 bytes @ 0x9
  1055  0054                     	ds	1
  1056  0055                     ___bmul@multiplier:	
  1057  0055                     Organize_Datas@bus_number:	
  1058                           ; 1 bytes @ 0xA
  1059                           
  1060                           
  1061                           ; 2 bytes @ 0xA
  1062  0055                     	ds	1
  1063  0056                     ??_Initialize_Parameters:	
  1064                           
  1065                           ; 1 bytes @ 0xB
  1066  0056                     	ds	1
  1067  0057                     ??_Organize_Datas:	
  1068                           
  1069                           ; 1 bytes @ 0xC
  1070  0057                     	ds	5
  1071  005C                     Organize_Datas@RxData:	
  1072                           
  1073                           ; 1 bytes @ 0x11
  1074  005C                     	ds	1
  1075  005D                     ??_main:	
  1076                           
  1077                           ; 1 bytes @ 0x12
  1078  005D                     	ds	1
  1079  005E                     main@display_reset_count:	
  1080                           
  1081                           ; 2 bytes @ 0x13
  1082  005E                     	ds	2
  1083                           
  1084                           	psect	maintext
  1085  04EB                     __pmaintext:	
  1086 ;;
  1087 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1088 ;;
  1089 ;; *************** function _main *****************
  1090 ;; Defined at:
  1091 ;;		line 216 in file "Stop_main.c"
  1092 ;; Parameters:    Size  Location     Type
  1093 ;;		None
  1094 ;; Auto vars:     Size  Location     Type
  1095 ;;  display_rese    2   19[BANK0 ] int 
  1096 ;; Return value:  Size  Location     Type
  1097 ;;                  1    wreg      void 
  1098 ;; Registers used:
  1099 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  1100 ;; Tracked objects:
  1101 ;;		On entry : B3F/0
  1102 ;;		On exit  : 0/0
  1103 ;;		Unchanged: 0/0
  1104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1105 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1106 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1107 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1108 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1109 ;;Total ram usage:        3 bytes
  1110 ;; Hardware stack levels required when called:    5
  1111 ;; This function calls:
  1112 ;;		_Initialize_Parameters
  1113 ;;		_Organize_Datas
  1114 ;;		_PIN_MANAGER_Initialize
  1115 ;;		_setup_TMR1
  1116 ;; This function is called by:
  1117 ;;		Startup code after reset
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _main
  1123  04EB                     _main:	
  1124                           
  1125                           ;Stop_main.c: 218: int display_reset_count = 0;
  1126                           
  1127                           ;incstack = 0
  1128                           ; Regs used in _main: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  1129  04EB  0140               	movlb	0	; select bank0
  1130  04EC  01DE               	clrf	main@display_reset_count
  1131  04ED  01DF               	clrf	main@display_reset_count+1
  1132                           
  1133                           ;Stop_main.c: 220: OSCSTATbits.PLLR = 1;
  1134  04EE  0151               	movlb	17	; select bank17
  1135  04EF  1410               	bsf	16,0	;volatile
  1136                           
  1137                           ;Stop_main.c: 222: OSCFRQ = 0x06;
  1138  04F0  3006               	movlw	6
  1139  04F1  0093               	movwf	19	;volatile
  1140                           
  1141                           ;Stop_main.c: 224: Initialize_Parameters();
  1142  04F2  3184  248B  3184   	fcall	_Initialize_Parameters
  1143                           
  1144                           ;Stop_main.c: 226: PIN_MANAGER_Initialize();
  1145  04F5  3184  242B  3184   	fcall	_PIN_MANAGER_Initialize
  1146                           
  1147                           ;Stop_main.c: 227: LATCbits.LATC0 = 0;
  1148  04F8  0140               	movlb	0	; select bank0
  1149  04F9  101A               	bcf	26,0	;volatile
  1150                           
  1151                           ;Stop_main.c: 228: LATCbits.LATC1 = 0;
  1152  04FA  109A               	bcf	26,1	;volatile
  1153                           
  1154                           ;Stop_main.c: 229: setup_TMR1();
  1155  04FB  3185  2561  3184   	fcall	_setup_TMR1
  1156                           
  1157                           ;Stop_main.c: 232: LATAbits.LATA3 = 1;
  1158  04FE  0140               	movlb	0	; select bank0
  1159  04FF  1598               	bsf	24,3	;volatile
  1160                           
  1161                           ;Stop_main.c: 233: TRISDbits.TRISD0 = 1;
  1162  0500  1415               	bsf	21,0	;volatile
  1163                           
  1164                           ;Stop_main.c: 234: TRISDbits.TRISD6 = 1;
  1165  0501  1715               	bsf	21,6	;volatile
  1166  0502                     l1199:	
  1167                           ;Stop_main.c: 236: while (1) {
  1168                           
  1169                           
  1170                           ;Stop_main.c: 237: if (RxData0[0].all_data == 1 && RxData1[0].all_data == 1) {
  1171  0502  0140               	movlb	0	; select bank0
  1172  0503  0347               	decf	_RxData0,w
  1173  0504  1D03               	btfss	3,2
  1174  0505  2D0C               	goto	l1205
  1175  0506  0349               	decf	_RxData1,w
  1176  0507  1D03               	btfss	3,2
  1177  0508  2D0C               	goto	l1205
  1178                           
  1179                           ;Stop_main.c: 238: LATCbits.LATC1 = 1;
  1180  0509  149A               	bsf	26,1	;volatile
  1181                           
  1182                           ;Stop_main.c: 239: LATDbits.LATD0 = 1;
  1183  050A  141B               	bsf	27,0	;volatile
  1184                           
  1185                           ;Stop_main.c: 240: } else if(RxData0[0].all_data == 0||RxData1[0].all_data == 0){
  1186  050B  2D13               	goto	l1209
  1187  050C                     l1205:	
  1188  050C  0847               	movf	_RxData0,w
  1189  050D  1D03               	btfss	3,2
  1190  050E  0849               	movf	_RxData1,w
  1191  050F  1D03               	btfss	3,2
  1192  0510  2D13               	goto	l1209
  1193                           
  1194                           ;Stop_main.c: 241: LATCbits.LATC1 = 0;
  1195  0511  109A               	bcf	26,1	;volatile
  1196                           
  1197                           ;Stop_main.c: 242: LATDbits.LATD0 = 0;
  1198  0512  101B               	bcf	27,0	;volatile
  1199  0513                     l1209:	
  1200                           
  1201                           ;Stop_main.c: 243: }
  1202                           ;Stop_main.c: 245: LATCbits.LATC0 = RxData0[0].all_data;
  1203  0513  0C47               	rrf	_RxData0,w
  1204  0514  1C03               	skipc
  1205  0515  101A               	bcf	26,0	;volatile
  1206  0516  1803               	skipnc
  1207  0517  141A               	bsf	26,0	;volatile
  1208                           
  1209                           ;Stop_main.c: 246: LATCbits.LATC2 = RxData1[0].all_data;
  1210  0518  0C49               	rrf	_RxData1,w
  1211  0519  1C03               	skipc
  1212  051A  111A               	bcf	26,2	;volatile
  1213  051B  1803               	skipnc
  1214  051C  151A               	bsf	26,2	;volatile
  1215                           
  1216                           ;Stop_main.c: 248: Organize_Datas(RxData0, Buffer0, 1, 0);
  1217  051D  3039               	movlw	(low (_Buffer0| 0))& (0+255)
  1218  051E  00DD               	movwf	??_main
  1219  051F  085D               	movf	??_main,w
  1220  0520  00D2               	movwf	Organize_Datas@Buffer
  1221  0521  3001               	movlw	1
  1222  0522  00D3               	movwf	Organize_Datas@number_of_data
  1223  0523  3000               	movlw	0
  1224  0524  00D4               	movwf	Organize_Datas@number_of_data+1
  1225  0525  3000               	movlw	0
  1226  0526  00D5               	movwf	Organize_Datas@bus_number
  1227  0527  00D6               	movwf	Organize_Datas@bus_number+1
  1228  0528  3047               	movlw	(low (_RxData0| 0))& (0+255)
  1229  0529  3180  2070  3184   	fcall	_Organize_Datas
  1230                           
  1231                           ;Stop_main.c: 249: Organize_Datas(RxData1, Buffer1, 1, 1);
  1232  052C  303E               	movlw	(low (_Buffer1| 0))& (0+255)
  1233  052D  0140               	movlb	0	; select bank0
  1234  052E  00DD               	movwf	??_main
  1235  052F  085D               	movf	??_main,w
  1236  0530  00D2               	movwf	Organize_Datas@Buffer
  1237  0531  3001               	movlw	1
  1238  0532  00D3               	movwf	Organize_Datas@number_of_data
  1239  0533  3000               	movlw	0
  1240  0534  00D4               	movwf	Organize_Datas@number_of_data+1
  1241  0535  3001               	movlw	1
  1242  0536  00D5               	movwf	Organize_Datas@bus_number
  1243  0537  3000               	movlw	0
  1244  0538  00D6               	movwf	Organize_Datas@bus_number+1
  1245  0539  3049               	movlw	(low (_RxData1| 0))& (0+255)
  1246  053A  3180  2070  3184   	fcall	_Organize_Datas
  1247  053D  2D02               	goto	l1199
  1248  053E                     __end_of_main:	
  1249                           
  1250                           	psect	text1
  1251  0561                     __ptext1:	
  1252 ;; *************** function _setup_TMR1 *****************
  1253 ;; Defined at:
  1254 ;;		line 207 in file "Stop_main.c"
  1255 ;; Parameters:    Size  Location     Type
  1256 ;;		None
  1257 ;; Auto vars:     Size  Location     Type
  1258 ;;		None
  1259 ;; Return value:  Size  Location     Type
  1260 ;;                  1    wreg      void 
  1261 ;; Registers used:
  1262 ;;		wreg, status,2
  1263 ;; Tracked objects:
  1264 ;;		On entry : 0/0
  1265 ;;		On exit  : 0/0
  1266 ;;		Unchanged: 0/0
  1267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1268 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1269 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1271 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1272 ;;Total ram usage:        0 bytes
  1273 ;; Hardware stack levels used:    1
  1274 ;; Hardware stack levels required when called:    3
  1275 ;; This function calls:
  1276 ;;		Nothing
  1277 ;; This function is called by:
  1278 ;;		_main
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           
  1283                           ;psect for function _setup_TMR1
  1284  0561                     _setup_TMR1:	
  1285                           
  1286                           ;Stop_main.c: 208: T1CON = 0;
  1287                           
  1288                           ;incstack = 0
  1289                           ; Regs used in _setup_TMR1: [wreg+status,2]
  1290  0561  0144               	movlb	4	; select bank4
  1291  0562  018E               	clrf	14	;volatile
  1292                           
  1293                           ;Stop_main.c: 209: T1CONbits.nSYNC = 1;
  1294  0563  150E               	bsf	14,2	;volatile
  1295                           
  1296                           ;Stop_main.c: 210: T1GCON = 0x00;
  1297  0564  018F               	clrf	15	;volatile
  1298                           
  1299                           ;Stop_main.c: 211: T1GATE = 0x00;
  1300  0565  0190               	clrf	16	;volatile
  1301                           
  1302                           ;Stop_main.c: 212: T1CLK = 0x01;
  1303  0566  3001               	movlw	1
  1304  0567  0091               	movwf	17	;volatile
  1305                           
  1306                           ;Stop_main.c: 213: T1CONbits.ON = 1;
  1307  0568  140E               	bsf	14,0	;volatile
  1308  0569  0008               	return
  1309  056A                     __end_of_setup_TMR1:	
  1310                           
  1311                           	psect	text2
  1312  042B                     __ptext2:	
  1313 ;; *************** function _PIN_MANAGER_Initialize *****************
  1314 ;; Defined at:
  1315 ;;		line 73 in file "Stop_main.c"
  1316 ;; Parameters:    Size  Location     Type
  1317 ;;		None
  1318 ;; Auto vars:     Size  Location     Type
  1319 ;;  state           1    7[BANK0 ] unsigned char 
  1320 ;; Return value:  Size  Location     Type
  1321 ;;                  1    wreg      void 
  1322 ;; Registers used:
  1323 ;;		wreg, status,2, status,0
  1324 ;; Tracked objects:
  1325 ;;		On entry : 0/0
  1326 ;;		On exit  : 0/0
  1327 ;;		Unchanged: 0/0
  1328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1329 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1330 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1331 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1332 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1333 ;;Total ram usage:        1 bytes
  1334 ;; Hardware stack levels used:    1
  1335 ;; Hardware stack levels required when called:    3
  1336 ;; This function calls:
  1337 ;;		Nothing
  1338 ;; This function is called by:
  1339 ;;		_main
  1340 ;; This function uses a non-reentrant model
  1341 ;;
  1342                           
  1343                           
  1344                           ;psect for function _PIN_MANAGER_Initialize
  1345  042B                     _PIN_MANAGER_Initialize:	
  1346                           
  1347                           ;Stop_main.c: 77: LATE = 0x00;
  1348                           
  1349                           ;incstack = 0
  1350                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2+status,0]
  1351  042B  0140               	movlb	0	; select bank0
  1352  042C  019C               	clrf	28	;volatile
  1353                           
  1354                           ;Stop_main.c: 78: LATD = 0x00;
  1355  042D  019B               	clrf	27	;volatile
  1356                           
  1357                           ;Stop_main.c: 79: LATA = 0x00;
  1358  042E  0198               	clrf	24	;volatile
  1359                           
  1360                           ;Stop_main.c: 80: LATB = 0x00;
  1361  042F  0199               	clrf	25	;volatile
  1362                           
  1363                           ;Stop_main.c: 81: LATC = 0x00;
  1364  0430  019A               	clrf	26	;volatile
  1365                           
  1366                           ;Stop_main.c: 87: TRISE = 0x07;
  1367  0431  3007               	movlw	7
  1368  0432  0096               	movwf	22	;volatile
  1369                           
  1370                           ;Stop_main.c: 88: TRISA = 0xFF;
  1371  0433  30FF               	movlw	255
  1372  0434  0092               	movwf	18	;volatile
  1373                           
  1374                           ;Stop_main.c: 89: TRISB = 0xFF;
  1375  0435  30FF               	movlw	255
  1376  0436  0093               	movwf	19	;volatile
  1377                           
  1378                           ;Stop_main.c: 90: TRISC = 0xF8;
  1379  0437  30F8               	movlw	248
  1380  0438  0094               	movwf	20	;volatile
  1381                           
  1382                           ;Stop_main.c: 91: TRISD = 0xFD;
  1383  0439  30FD               	movlw	253
  1384  043A  0095               	movwf	21	;volatile
  1385                           
  1386                           ;Stop_main.c: 92: TRISDbits.TRISD6 = 1;
  1387  043B  1715               	bsf	21,6	;volatile
  1388                           
  1389                           ;Stop_main.c: 98: ANSELC = 0x00;
  1390  043C  017E               	movlb	62	; select bank62
  1391  043D  01CE               	clrf	78	;volatile
  1392                           
  1393                           ;Stop_main.c: 99: ANSELB = 0x00;
  1394  043E  01C3               	clrf	67	;volatile
  1395                           
  1396                           ;Stop_main.c: 100: ANSELD = 0x00;
  1397  043F  01D9               	clrf	89	;volatile
  1398                           
  1399                           ;Stop_main.c: 101: ANSELE = 0x00;
  1400  0440  01E4               	clrf	100	;volatile
  1401                           
  1402                           ;Stop_main.c: 102: ANSELA = 0x00;
  1403  0441  01B8               	clrf	56	;volatile
  1404                           
  1405                           ;Stop_main.c: 107: WPUD = 0x00;
  1406  0442  01DA               	clrf	90	;volatile
  1407                           
  1408                           ;Stop_main.c: 108: WPUE = 0x00;
  1409  0443  01E5               	clrf	101	;volatile
  1410                           
  1411                           ;Stop_main.c: 109: WPUB = 0x00;
  1412  0444  01C4               	clrf	68	;volatile
  1413                           
  1414                           ;Stop_main.c: 110: WPUA = 0x00;
  1415  0445  01B9               	clrf	57	;volatile
  1416                           
  1417                           ;Stop_main.c: 111: WPUC = 0x00;
  1418  0446  01CF               	clrf	79	;volatile
  1419                           
  1420                           ;Stop_main.c: 116: ODCONE = 0x00;
  1421  0447  01E6               	clrf	102	;volatile
  1422                           
  1423                           ;Stop_main.c: 117: ODCONA = 0x00;
  1424  0448  01BA               	clrf	58	;volatile
  1425                           
  1426                           ;Stop_main.c: 118: ODCONB = 0x00;
  1427  0449  01C5               	clrf	69	;volatile
  1428                           
  1429                           ;Stop_main.c: 119: ODCONC = 0x00;
  1430  044A  01D0               	clrf	80	;volatile
  1431                           
  1432                           ;Stop_main.c: 120: ODCOND = 0x00;
  1433  044B  01DB               	clrf	91	;volatile
  1434                           
  1435                           ;Stop_main.c: 127: IOCAFbits.IOCAF0 = 0;
  1436  044C  103F               	bcf	63,0	;volatile
  1437                           
  1438                           ;Stop_main.c: 129: IOCANbits.IOCAN0 = 1;
  1439  044D  143E               	bsf	62,0	;volatile
  1440                           
  1441                           ;Stop_main.c: 131: IOCAPbits.IOCAP0 = 1;
  1442  044E  143D               	bsf	61,0	;volatile
  1443                           
  1444                           ;Stop_main.c: 137: BAUD2CON = 0x08;
  1445  044F  3008               	movlw	8
  1446  0450  0154               	movlb	20	; select bank20
  1447  0451  009F               	movwf	31	;volatile
  1448                           
  1449                           ;Stop_main.c: 140: RC2STA = 0x90;
  1450  0452  3090               	movlw	144
  1451  0453  009D               	movwf	29	;volatile
  1452                           
  1453                           ;Stop_main.c: 143: TX2STA = 0x24;
  1454  0454  3024               	movlw	36
  1455  0455  009E               	movwf	30	;volatile
  1456                           
  1457                           ;Stop_main.c: 146: SP2BRGL = 0x8A;
  1458  0456  308A               	movlw	138
  1459  0457  009B               	movwf	27	;volatile
  1460                           
  1461                           ;Stop_main.c: 149: SP2BRGH = 0x00;
  1462  0458  019C               	clrf	28	;volatile
  1463                           
  1464                           ;Stop_main.c: 152: BAUD1CON = 0x08;
  1465  0459  3008               	movlw	8
  1466  045A  0142               	movlb	2	; select bank2
  1467  045B  009F               	movwf	31	;volatile
  1468                           
  1469                           ;Stop_main.c: 155: RC1STA = 0x90;
  1470  045C  3090               	movlw	144
  1471  045D  009D               	movwf	29	;volatile
  1472                           
  1473                           ;Stop_main.c: 158: TX1STA = 0x24;
  1474  045E  3024               	movlw	36
  1475  045F  009E               	movwf	30	;volatile
  1476                           
  1477                           ;Stop_main.c: 161: SP1BRGL = 0x8A;
  1478  0460  308A               	movlw	138
  1479  0461  009B               	movwf	27	;volatile
  1480                           
  1481                           ;Stop_main.c: 163: SP1BRGH = 0x00;
  1482  0462  019C               	clrf	28	;volatile
  1483                           
  1484                           ;Stop_main.c: 165: INTCONbits.PEIE = 1;
  1485  0463  170B               	bsf	11,6	;volatile
  1486                           
  1487                           ;Stop_main.c: 166: PIE3bits.RC2IE = 1;
  1488  0464  014E               	movlb	14	; select bank14
  1489  0465  1799               	bsf	25,7	;volatile
  1490                           
  1491                           ;Stop_main.c: 167: PIE3bits.RC1IE = 1;
  1492  0466  1699               	bsf	25,5	;volatile
  1493                           
  1494                           ;Stop_main.c: 171: bool state = GIE;
  1495  0467  3000               	movlw	0
  1496  0468  1B8B               	btfsc	11,7	;volatile
  1497  0469  3001               	movlw	1
  1498  046A  0140               	movlb	0	; select bank0
  1499  046B  00D2               	movwf	PIN_MANAGER_Initialize@state
  1500                           
  1501                           ;Stop_main.c: 172: GIE = 1;
  1502  046C  178B               	bsf	11,7	;volatile
  1503                           
  1504                           ;Stop_main.c: 173: PPSLOCK = 0x55;
  1505  046D  3055               	movlw	85
  1506  046E  017D               	movlb	61	; select bank61
  1507  046F  008F               	movwf	15	;volatile
  1508                           
  1509                           ;Stop_main.c: 174: PPSLOCK = 0xAA;
  1510  0470  30AA               	movlw	170
  1511  0471  008F               	movwf	15	;volatile
  1512                           
  1513                           ;Stop_main.c: 175: PPSLOCKbits.PPSLOCKED = 0x00;
  1514  0472  100F               	bcf	15,0	;volatile
  1515                           
  1516                           ;Stop_main.c: 179: RX1DTPPSbits.RX1DTPPS = 0x08;
  1517  0473  084B               	movf	75,w	;volatile
  1518  0474  39C0               	andlw	-64
  1519  0475  3808               	iorlw	8
  1520  0476  00CB               	movwf	75	;volatile
  1521                           
  1522                           ;Stop_main.c: 181: RX2DTPPSbits.RX2DTPPS = 0x1F;
  1523  0477  084D               	movf	77,w	;volatile
  1524  0478  39C0               	andlw	-64
  1525  0479  381F               	iorlw	31
  1526  047A  00CD               	movwf	77	;volatile
  1527                           
  1528                           ;Stop_main.c: 185: PPSLOCK = 0x55;
  1529  047B  3055               	movlw	85
  1530  047C  008F               	movwf	15	;volatile
  1531                           
  1532                           ;Stop_main.c: 186: PPSLOCK = 0xAA;
  1533  047D  30AA               	movlw	170
  1534  047E  008F               	movwf	15	;volatile
  1535                           
  1536                           ;Stop_main.c: 187: PPSLOCKbits.PPSLOCKED = 0x01;
  1537  047F  140F               	bsf	15,0	;volatile
  1538                           
  1539                           ;Stop_main.c: 189: GIE = 1;
  1540  0480  178B               	bsf	11,7	;volatile
  1541                           
  1542                           ;Stop_main.c: 192: OSCCON1 = 0x60;
  1543  0481  3060               	movlw	96
  1544  0482  0151               	movlb	17	; select bank17
  1545  0483  008D               	movwf	13	;volatile
  1546                           
  1547                           ;Stop_main.c: 194: OSCCON3 = 0x00;
  1548  0484  018F               	clrf	15	;volatile
  1549                           
  1550                           ;Stop_main.c: 196: OSCEN = 0x00;
  1551  0485  0191               	clrf	17	;volatile
  1552                           
  1553                           ;Stop_main.c: 198: OSCFRQ = 0x06;
  1554  0486  3006               	movlw	6
  1555  0487  0093               	movwf	19	;volatile
  1556                           
  1557                           ;Stop_main.c: 200: OSCSTAT = 0x00;
  1558  0488  0190               	clrf	16	;volatile
  1559                           
  1560                           ;Stop_main.c: 202: OSCTUNE = 0x00;
  1561  0489  0192               	clrf	18	;volatile
  1562  048A  0008               	return
  1563  048B                     __end_of_PIN_MANAGER_Initialize:	
  1564                           
  1565                           	psect	text3
  1566  0070                     __ptext3:	
  1567 ;; *************** function _Organize_Datas *****************
  1568 ;; Defined at:
  1569 ;;		line 20 in file "Controller_Protocol.c"
  1570 ;; Parameters:    Size  Location     Type
  1571 ;;  RxData          1    wreg     PTR struct .
  1572 ;;		 -> RxData1(2), RxData0(2), 
  1573 ;;  Buffer          1    7[BANK0 ] PTR struct .
  1574 ;;		 -> Buffer1(5), Buffer0(5), 
  1575 ;;  number_of_da    2    8[BANK0 ] int 
  1576 ;;  bus_number      2   10[BANK0 ] int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  RxData          1   17[BANK0 ] PTR struct .
  1579 ;;		 -> RxData1(2), RxData0(2), 
  1580 ;; Return value:  Size  Location     Type
  1581 ;;                  1    wreg      void 
  1582 ;; Registers used:
  1583 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1584 ;; Tracked objects:
  1585 ;;		On entry : 0/0
  1586 ;;		On exit  : 0/0
  1587 ;;		Unchanged: 0/0
  1588 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  1589 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1590 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1591 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1592 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  1593 ;;Total ram usage:       11 bytes
  1594 ;; Hardware stack levels used:    1
  1595 ;; Hardware stack levels required when called:    3
  1596 ;; This function calls:
  1597 ;;		Nothing
  1598 ;; This function is called by:
  1599 ;;		_main
  1600 ;; This function uses a non-reentrant model
  1601 ;;
  1602                           
  1603                           
  1604                           ;psect for function _Organize_Datas
  1605  0070                     _Organize_Datas:	
  1606                           
  1607                           ;incstack = 0
  1608                           ; Regs used in _Organize_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  1609                           ;Organize_Datas@RxData stored from wreg
  1610  0070  0140               	movlb	0	; select bank0
  1611  0071  00DC               	movwf	Organize_Datas@RxData
  1612                           
  1613                           ;Controller_Protocol.c: 21: OP[bus_number].count = 1;
  1614  0072  0855               	movf	Organize_Datas@bus_number,w
  1615  0073  00D7               	movwf	??_Organize_Datas
  1616  0074  3001               	movlw	1
  1617  0075                     u895:	
  1618  0075  35D7               	lslf	??_Organize_Datas,f
  1619  0076  3EFF               	addlw	-1
  1620  0077  1D03               	skipz
  1621  0078  2875               	goto	u895
  1622  0079  3557               	lslf	??_Organize_Datas,w
  1623  007A  3E02               	addlw	2
  1624  007B  3E20               	addlw	(low (_OP| 0))& (0+255)
  1625  007C  0086               	movwf	6
  1626  007D  0187               	clrf	7
  1627  007E  3001               	movlw	1
  1628  007F  3FC0               	movwi [0]fsr1
  1629  0080  3000               	movlw	0
  1630  0081  3FC1               	movwi [1]fsr1
  1631                           
  1632                           ;Controller_Protocol.c: 22: for(OP[bus_number].num=0;OP[bus_number].num<number_of_data;O
      +                          P[bus_number].num++){
  1633  0082  0855               	movf	Organize_Datas@bus_number,w
  1634  0083  00D7               	movwf	??_Organize_Datas
  1635  0084  3001               	movlw	1
  1636  0085                     u905:	
  1637  0085  35D7               	lslf	??_Organize_Datas,f
  1638  0086  3EFF               	addlw	-1
  1639  0087  1D03               	skipz
  1640  0088  2885               	goto	u905
  1641  0089  3557               	lslf	??_Organize_Datas,w
  1642  008A  3E20               	addlw	(low (_OP| 0))& (0+255)
  1643  008B  0086               	movwf	6
  1644  008C  0187               	clrf	7
  1645  008D  3000               	movlw	0
  1646  008E  3FC0               	movwi [0]fsr1
  1647  008F  3FC1               	movwi [1]fsr1
  1648  0090                     l208:	
  1649  0090  0855               	movf	Organize_Datas@bus_number,w
  1650  0091  00D7               	movwf	??_Organize_Datas
  1651  0092  3001               	movlw	1
  1652  0093                     u1075:	
  1653  0093  35D7               	lslf	??_Organize_Datas,f
  1654  0094  3EFF               	addlw	-1
  1655  0095  1D03               	skipz
  1656  0096  2893               	goto	u1075
  1657  0097  3557               	lslf	??_Organize_Datas,w
  1658  0098  3E20               	addlw	(low (_OP| 0))& (0+255)
  1659  0099  0086               	movwf	6
  1660  009A  0187               	clrf	7
  1661  009B  3F40               	moviw [0]fsr1
  1662  009C  00D8               	movwf	??_Organize_Datas+1
  1663  009D  3F41               	moviw [1]fsr1
  1664  009E  00D9               	movwf	??_Organize_Datas+2
  1665  009F  0859               	movf	??_Organize_Datas+2,w
  1666  00A0  3A80               	xorlw	128
  1667  00A1  00DA               	movwf	??_Organize_Datas+3
  1668  00A2  0854               	movf	Organize_Datas@number_of_data+1,w
  1669  00A3  3A80               	xorlw	128
  1670  00A4  025A               	subwf	??_Organize_Datas+3,w
  1671  00A5  1D03               	skipz
  1672  00A6  28A9               	goto	u1085
  1673  00A7  0853               	movf	Organize_Datas@number_of_data,w
  1674  00A8  0258               	subwf	??_Organize_Datas+1,w
  1675  00A9                     u1085:	
  1676  00A9  1803               	btfsc	3,0
  1677  00AA  0008               	return
  1678                           
  1679                           ;Controller_Protocol.c: 23: RxData[OP[bus_number].num].upper_data = Buffer[OP[bus_number
      +                          ].count].upper_data;
  1680  00AB  0140               	movlb	0	; select bank0
  1681  00AC  0855               	movf	Organize_Datas@bus_number,w
  1682  00AD  00D7               	movwf	??_Organize_Datas
  1683  00AE  3001               	movlw	1
  1684  00AF                     u915:	
  1685  00AF  35D7               	lslf	??_Organize_Datas,f
  1686  00B0  3EFF               	addlw	-1
  1687  00B1  1D03               	skipz
  1688  00B2  28AF               	goto	u915
  1689  00B3  3557               	lslf	??_Organize_Datas,w
  1690  00B4  3E02               	addlw	2
  1691  00B5  3E20               	addlw	(low (_OP| 0))& (0+255)
  1692  00B6  0086               	movwf	6
  1693  00B7  0187               	clrf	7
  1694  00B8  0801               	movf	1,w
  1695  00B9  0752               	addwf	Organize_Datas@Buffer,w
  1696  00BA  00D8               	movwf	??_Organize_Datas+1
  1697  00BB  0858               	movf	??_Organize_Datas+1,w
  1698  00BC  0086               	movwf	6
  1699  00BD  0187               	clrf	7
  1700  00BE  0E01               	swapf	1,w
  1701  00BF  390F               	andlw	15
  1702  00C0  00D9               	movwf	??_Organize_Datas+2
  1703  00C1  0855               	movf	Organize_Datas@bus_number,w
  1704  00C2  00DA               	movwf	??_Organize_Datas+3
  1705  00C3  3001               	movlw	1
  1706  00C4                     u925:	
  1707  00C4  35DA               	lslf	??_Organize_Datas+3,f
  1708  00C5  3EFF               	addlw	-1
  1709  00C6  1D03               	skipz
  1710  00C7  28C4               	goto	u925
  1711  00C8  355A               	lslf	??_Organize_Datas+3,w
  1712  00C9  3E20               	addlw	(low (_OP| 0))& (0+255)
  1713  00CA  0086               	movwf	6
  1714  00CB  0187               	clrf	7
  1715  00CC  3501               	lslf	1,w
  1716  00CD  075C               	addwf	Organize_Datas@RxData,w
  1717  00CE  00DB               	movwf	??_Organize_Datas+4
  1718  00CF  085B               	movf	??_Organize_Datas+4,w
  1719  00D0  0086               	movwf	6
  1720  00D1  0187               	clrf	7
  1721  00D2  0ED9               	swapf	??_Organize_Datas+2,f
  1722  00D3  0801               	movf	1,w
  1723  00D4  0659               	xorwf	??_Organize_Datas+2,w
  1724  00D5  390F               	andlw	-241
  1725  00D6  0659               	xorwf	??_Organize_Datas+2,w
  1726  00D7  0081               	movwf	1
  1727                           
  1728                           ;Controller_Protocol.c: 24: RxData[OP[bus_number].num].lower_data = Buffer[OP[bus_number
      +                          ].count+1].upper_data;
  1729  00D8  0855               	movf	Organize_Datas@bus_number,w
  1730  00D9  00D7               	movwf	??_Organize_Datas
  1731  00DA  3001               	movlw	1
  1732  00DB                     u935:	
  1733  00DB  35D7               	lslf	??_Organize_Datas,f
  1734  00DC  3EFF               	addlw	-1
  1735  00DD  1D03               	skipz
  1736  00DE  28DB               	goto	u935
  1737  00DF  3557               	lslf	??_Organize_Datas,w
  1738  00E0  3E02               	addlw	2
  1739  00E1  3E20               	addlw	(low (_OP| 0))& (0+255)
  1740  00E2  0086               	movwf	6
  1741  00E3  0187               	clrf	7
  1742  00E4  0801               	movf	1,w
  1743  00E5  3E01               	addlw	1
  1744  00E6  0752               	addwf	Organize_Datas@Buffer,w
  1745  00E7  00D8               	movwf	??_Organize_Datas+1
  1746  00E8  0858               	movf	??_Organize_Datas+1,w
  1747  00E9  0086               	movwf	6
  1748  00EA  0187               	clrf	7
  1749  00EB  0E01               	swapf	1,w
  1750  00EC  390F               	andlw	15
  1751  00ED  00D9               	movwf	??_Organize_Datas+2
  1752  00EE  0855               	movf	Organize_Datas@bus_number,w
  1753  00EF  00DA               	movwf	??_Organize_Datas+3
  1754  00F0  3001               	movlw	1
  1755  00F1                     u945:	
  1756  00F1  35DA               	lslf	??_Organize_Datas+3,f
  1757  00F2  3EFF               	addlw	-1
  1758  00F3  1D03               	skipz
  1759  00F4  28F1               	goto	u945
  1760  00F5  355A               	lslf	??_Organize_Datas+3,w
  1761  00F6  3E20               	addlw	(low (_OP| 0))& (0+255)
  1762  00F7  0086               	movwf	6
  1763  00F8  0187               	clrf	7
  1764  00F9  3501               	lslf	1,w
  1765  00FA  075C               	addwf	Organize_Datas@RxData,w
  1766  00FB  00DB               	movwf	??_Organize_Datas+4
  1767  00FC  085B               	movf	??_Organize_Datas+4,w
  1768  00FD  0086               	movwf	6
  1769  00FE  0187               	clrf	7
  1770  00FF  0801               	movf	1,w
  1771  0100  0659               	xorwf	??_Organize_Datas+2,w
  1772  0101  39F0               	andlw	-16
  1773  0102  0659               	xorwf	??_Organize_Datas+2,w
  1774  0103  0081               	movwf	1
  1775                           
  1776                           ;Controller_Protocol.c: 25: if((Buffer[OP[bus_number].count].upper_data | Buffer[OP[bus_
      +                          number].count+1].lower_data) == 15)RxData[OP[bus_number].num].UD_error = 0;
  1777  0104  0855               	movf	Organize_Datas@bus_number,w
  1778  0105  00D7               	movwf	??_Organize_Datas
  1779  0106  3001               	movlw	1
  1780  0107                     u955:	
  1781  0107  35D7               	lslf	??_Organize_Datas,f
  1782  0108  3EFF               	addlw	-1
  1783  0109  1D03               	skipz
  1784  010A  2907               	goto	u955
  1785  010B  3557               	lslf	??_Organize_Datas,w
  1786  010C  3E02               	addlw	2
  1787  010D  3E20               	addlw	(low (_OP| 0))& (0+255)
  1788  010E  0086               	movwf	6
  1789  010F  0187               	clrf	7
  1790  0110  0801               	movf	1,w
  1791  0111  0752               	addwf	Organize_Datas@Buffer,w
  1792  0112  00D8               	movwf	??_Organize_Datas+1
  1793  0113  0858               	movf	??_Organize_Datas+1,w
  1794  0114  0086               	movwf	6
  1795  0115  0187               	clrf	7
  1796  0116  0E01               	swapf	1,w
  1797  0117  390F               	andlw	15
  1798  0118  00D9               	movwf	??_Organize_Datas+2
  1799  0119  0855               	movf	Organize_Datas@bus_number,w
  1800  011A  00DA               	movwf	??_Organize_Datas+3
  1801  011B  3001               	movlw	1
  1802  011C                     u965:	
  1803  011C  35DA               	lslf	??_Organize_Datas+3,f
  1804  011D  3EFF               	addlw	-1
  1805  011E  1D03               	skipz
  1806  011F  291C               	goto	u965
  1807  0120  355A               	lslf	??_Organize_Datas+3,w
  1808  0121  3E02               	addlw	2
  1809  0122  3E20               	addlw	(low (_OP| 0))& (0+255)
  1810  0123  0086               	movwf	6
  1811  0124  0187               	clrf	7
  1812  0125  0801               	movf	1,w
  1813  0126  3E01               	addlw	1
  1814  0127  0752               	addwf	Organize_Datas@Buffer,w
  1815  0128  00DB               	movwf	??_Organize_Datas+4
  1816  0129  085B               	movf	??_Organize_Datas+4,w
  1817  012A  0086               	movwf	6
  1818  012B  0187               	clrf	7
  1819  012C  0801               	movf	1,w
  1820  012D  390F               	andlw	15
  1821  012E  0459               	iorwf	??_Organize_Datas+2,w
  1822  012F  3A0F               	xorlw	15
  1823  0130  1D03               	skipz
  1824  0131  2945               	goto	l1119
  1825  0132  0855               	movf	Organize_Datas@bus_number,w
  1826  0133  00D7               	movwf	??_Organize_Datas
  1827  0134  3001               	movlw	1
  1828  0135                     u985:	
  1829  0135  35D7               	lslf	??_Organize_Datas,f
  1830  0136  3EFF               	addlw	-1
  1831  0137  1D03               	skipz
  1832  0138  2935               	goto	u985
  1833  0139  3557               	lslf	??_Organize_Datas,w
  1834  013A  3E20               	addlw	(low (_OP| 0))& (0+255)
  1835  013B  0086               	movwf	6
  1836  013C  0187               	clrf	7
  1837  013D  3501               	lslf	1,w
  1838  013E  075C               	addwf	Organize_Datas@RxData,w
  1839  013F  00D8               	movwf	??_Organize_Datas+1
  1840  0140  0A58               	incf	??_Organize_Datas+1,w
  1841  0141  0086               	movwf	6
  1842  0142  0187               	clrf	7
  1843  0143  1001               	bcf	1,0
  1844  0144  2957               	goto	l211
  1845  0145                     l1119:	
  1846                           
  1847                           ;Controller_Protocol.c: 26: else RxData[OP[bus_number].num].UD_error = 1;
  1848  0145  0855               	movf	Organize_Datas@bus_number,w
  1849  0146  00D7               	movwf	??_Organize_Datas
  1850  0147  3001               	movlw	1
  1851  0148                     u995:	
  1852  0148  35D7               	lslf	??_Organize_Datas,f
  1853  0149  3EFF               	addlw	-1
  1854  014A  1D03               	skipz
  1855  014B  2948               	goto	u995
  1856  014C  3557               	lslf	??_Organize_Datas,w
  1857  014D  3E20               	addlw	(low (_OP| 0))& (0+255)
  1858  014E  0086               	movwf	6
  1859  014F  0187               	clrf	7
  1860  0150  3501               	lslf	1,w
  1861  0151  075C               	addwf	Organize_Datas@RxData,w
  1862  0152  00D8               	movwf	??_Organize_Datas+1
  1863  0153  0A58               	incf	??_Organize_Datas+1,w
  1864  0154  0086               	movwf	6
  1865  0155  0187               	clrf	7
  1866  0156  1401               	bsf	1,0
  1867  0157                     l211:	
  1868                           
  1869                           ;Controller_Protocol.c: 27: if((Buffer[OP[bus_number].count+1].upper_data | Buffer[OP[bu
      +                          s_number].count+2].lower_data) == 15)RxData[OP[bus_number].num].LD_error = 0;
  1870  0157  0855               	movf	Organize_Datas@bus_number,w
  1871  0158  00D7               	movwf	??_Organize_Datas
  1872  0159  3001               	movlw	1
  1873  015A                     u1005:	
  1874  015A  35D7               	lslf	??_Organize_Datas,f
  1875  015B  3EFF               	addlw	-1
  1876  015C  1D03               	skipz
  1877  015D  295A               	goto	u1005
  1878  015E  3557               	lslf	??_Organize_Datas,w
  1879  015F  3E02               	addlw	2
  1880  0160  3E20               	addlw	(low (_OP| 0))& (0+255)
  1881  0161  0086               	movwf	6
  1882  0162  0187               	clrf	7
  1883  0163  0801               	movf	1,w
  1884  0164  3E01               	addlw	1
  1885  0165  0752               	addwf	Organize_Datas@Buffer,w
  1886  0166  00D8               	movwf	??_Organize_Datas+1
  1887  0167  0858               	movf	??_Organize_Datas+1,w
  1888  0168  0086               	movwf	6
  1889  0169  0187               	clrf	7
  1890  016A  0E01               	swapf	1,w
  1891  016B  390F               	andlw	15
  1892  016C  00D9               	movwf	??_Organize_Datas+2
  1893  016D  0855               	movf	Organize_Datas@bus_number,w
  1894  016E  00DA               	movwf	??_Organize_Datas+3
  1895  016F  3001               	movlw	1
  1896  0170                     u1015:	
  1897  0170  35DA               	lslf	??_Organize_Datas+3,f
  1898  0171  3EFF               	addlw	-1
  1899  0172  1D03               	skipz
  1900  0173  2970               	goto	u1015
  1901  0174  355A               	lslf	??_Organize_Datas+3,w
  1902  0175  3E02               	addlw	2
  1903  0176  3E20               	addlw	(low (_OP| 0))& (0+255)
  1904  0177  0086               	movwf	6
  1905  0178  0187               	clrf	7
  1906  0179  0801               	movf	1,w
  1907  017A  3E02               	addlw	2
  1908  017B  0752               	addwf	Organize_Datas@Buffer,w
  1909  017C  00DB               	movwf	??_Organize_Datas+4
  1910  017D  085B               	movf	??_Organize_Datas+4,w
  1911  017E  0086               	movwf	6
  1912  017F  0187               	clrf	7
  1913  0180  0801               	movf	1,w
  1914  0181  390F               	andlw	15
  1915  0182  0459               	iorwf	??_Organize_Datas+2,w
  1916  0183  3A0F               	xorlw	15
  1917  0184  1D03               	skipz
  1918  0185  2999               	goto	l1123
  1919  0186  0855               	movf	Organize_Datas@bus_number,w
  1920  0187  00D7               	movwf	??_Organize_Datas
  1921  0188  3001               	movlw	1
  1922  0189                     u1035:	
  1923  0189  35D7               	lslf	??_Organize_Datas,f
  1924  018A  3EFF               	addlw	-1
  1925  018B  1D03               	skipz
  1926  018C  2989               	goto	u1035
  1927  018D  3557               	lslf	??_Organize_Datas,w
  1928  018E  3E20               	addlw	(low (_OP| 0))& (0+255)
  1929  018F  0086               	movwf	6
  1930  0190  0187               	clrf	7
  1931  0191  3501               	lslf	1,w
  1932  0192  075C               	addwf	Organize_Datas@RxData,w
  1933  0193  00D8               	movwf	??_Organize_Datas+1
  1934  0194  0A58               	incf	??_Organize_Datas+1,w
  1935  0195  0086               	movwf	6
  1936  0196  0187               	clrf	7
  1937  0197  1081               	bcf	1,1
  1938  0198  29AB               	goto	l213
  1939  0199                     l1123:	
  1940                           
  1941                           ;Controller_Protocol.c: 28: else RxData[OP[bus_number].num].LD_error = 1;
  1942  0199  0855               	movf	Organize_Datas@bus_number,w
  1943  019A  00D7               	movwf	??_Organize_Datas
  1944  019B  3001               	movlw	1
  1945  019C                     u1045:	
  1946  019C  35D7               	lslf	??_Organize_Datas,f
  1947  019D  3EFF               	addlw	-1
  1948  019E  1D03               	skipz
  1949  019F  299C               	goto	u1045
  1950  01A0  3557               	lslf	??_Organize_Datas,w
  1951  01A1  3E20               	addlw	(low (_OP| 0))& (0+255)
  1952  01A2  0086               	movwf	6
  1953  01A3  0187               	clrf	7
  1954  01A4  3501               	lslf	1,w
  1955  01A5  075C               	addwf	Organize_Datas@RxData,w
  1956  01A6  00D8               	movwf	??_Organize_Datas+1
  1957  01A7  0A58               	incf	??_Organize_Datas+1,w
  1958  01A8  0086               	movwf	6
  1959  01A9  0187               	clrf	7
  1960  01AA  1481               	bsf	1,1
  1961  01AB                     l213:	
  1962                           
  1963                           ;Controller_Protocol.c: 29: OP[bus_number].count += 2;
  1964  01AB  0855               	movf	Organize_Datas@bus_number,w
  1965  01AC  00D7               	movwf	??_Organize_Datas
  1966  01AD  3001               	movlw	1
  1967  01AE                     u1055:	
  1968  01AE  35D7               	lslf	??_Organize_Datas,f
  1969  01AF  3EFF               	addlw	-1
  1970  01B0  1D03               	skipz
  1971  01B1  29AE               	goto	u1055
  1972  01B2  3557               	lslf	??_Organize_Datas,w
  1973  01B3  3E02               	addlw	2
  1974  01B4  3E20               	addlw	(low (_OP| 0))& (0+255)
  1975  01B5  0086               	movwf	6
  1976  01B6  0187               	clrf	7
  1977  01B7  3002               	movlw	2
  1978  01B8  0781               	addwf	1,f
  1979  01B9  3141               	addfsr 1,1
  1980  01BA  1803               	skipnc
  1981  01BB  0A81               	incf	1,f
  1982  01BC  0855               	movf	Organize_Datas@bus_number,w
  1983  01BD  00D7               	movwf	??_Organize_Datas
  1984  01BE  3001               	movlw	1
  1985  01BF                     u1065:	
  1986  01BF  35D7               	lslf	??_Organize_Datas,f
  1987  01C0  3EFF               	addlw	-1
  1988  01C1  1D03               	skipz
  1989  01C2  29BF               	goto	u1065
  1990  01C3  3557               	lslf	??_Organize_Datas,w
  1991  01C4  3E20               	addlw	(low (_OP| 0))& (0+255)
  1992  01C5  0086               	movwf	6
  1993  01C6  0187               	clrf	7
  1994  01C7  3001               	movlw	1
  1995  01C8  0781               	addwf	1,f
  1996  01C9  3141               	addfsr 1,1
  1997  01CA  1803               	skipnc
  1998  01CB  0A81               	incf	1,f
  1999  01CC  2890               	goto	l208
  2000  01CD                     __end_of_Organize_Datas:	
  2001                           
  2002                           	psect	text4
  2003  048B                     __ptext4:	
  2004 ;; *************** function _Initialize_Parameters *****************
  2005 ;; Defined at:
  2006 ;;		line 105 in file "Controller_Protocol.c"
  2007 ;; Parameters:    Size  Location     Type
  2008 ;;		None
  2009 ;; Auto vars:     Size  Location     Type
  2010 ;;		None
  2011 ;; Return value:  Size  Location     Type
  2012 ;;                  1    wreg      void 
  2013 ;; Registers used:
  2014 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2015 ;; Tracked objects:
  2016 ;;		On entry : 0/0
  2017 ;;		On exit  : 0/0
  2018 ;;		Unchanged: 0/0
  2019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2020 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2022 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2023 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2024 ;;Total ram usage:        1 bytes
  2025 ;; Hardware stack levels used:    1
  2026 ;; Hardware stack levels required when called:    4
  2027 ;; This function calls:
  2028 ;;		___bmul
  2029 ;; This function is called by:
  2030 ;;		_main
  2031 ;; This function uses a non-reentrant model
  2032 ;;
  2033                           
  2034                           
  2035                           ;psect for function _Initialize_Parameters
  2036  048B                     _Initialize_Parameters:	
  2037                           
  2038                           ;Controller_Protocol.c: 106: static int i;
  2039                           ;Controller_Protocol.c: 108: for(i=0;i<2;i++)OP[i].count = 1;
  2040                           
  2041                           ;incstack = 0
  2042                           ; Regs used in _Initialize_Parameters: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack
      +                          ]
  2043  048B  0140               	movlb	0	; select bank0
  2044  048C  01B5               	clrf	Initialize_Parameters@i
  2045  048D  01B6               	clrf	Initialize_Parameters@i+1
  2046  048E  0836               	movf	Initialize_Parameters@i+1,w
  2047  048F  3A80               	xorlw	128
  2048  0490  00D6               	movwf	??_Initialize_Parameters
  2049  0491  3080               	movlw	128
  2050  0492  0256               	subwf	??_Initialize_Parameters,w
  2051  0493  1D03               	skipz
  2052  0494  2C97               	goto	u835
  2053  0495  3002               	movlw	2
  2054  0496  0235               	subwf	Initialize_Parameters@i,w
  2055  0497                     u835:	
  2056  0497  1803               	btfsc	3,0
  2057  0498  2CB9               	goto	l1099
  2058  0499                     l1093:	
  2059  0499  0140               	movlb	0	; select bank0
  2060  049A  0835               	movf	Initialize_Parameters@i,w
  2061  049B  00D6               	movwf	??_Initialize_Parameters
  2062  049C  3001               	movlw	1
  2063  049D                     u845:	
  2064  049D  35D6               	lslf	??_Initialize_Parameters,f
  2065  049E  3EFF               	addlw	-1
  2066  049F  1D03               	skipz
  2067  04A0  2C9D               	goto	u845
  2068  04A1  3556               	lslf	??_Initialize_Parameters,w
  2069  04A2  3E02               	addlw	2
  2070  04A3  3E20               	addlw	(low (_OP| 0))& (0+255)
  2071  04A4  0086               	movwf	6
  2072  04A5  0187               	clrf	7
  2073  04A6  3001               	movlw	1
  2074  04A7  3FC0               	movwi [0]fsr1
  2075  04A8  3000               	movlw	0
  2076  04A9  3FC1               	movwi [1]fsr1
  2077  04AA  3001               	movlw	1
  2078  04AB  07B5               	addwf	Initialize_Parameters@i,f
  2079  04AC  3000               	movlw	0
  2080  04AD  3DB6               	addwfc	Initialize_Parameters@i+1,f
  2081  04AE  0836               	movf	Initialize_Parameters@i+1,w
  2082  04AF  3A80               	xorlw	128
  2083  04B0  00D6               	movwf	??_Initialize_Parameters
  2084  04B1  3080               	movlw	128
  2085  04B2  0256               	subwf	??_Initialize_Parameters,w
  2086  04B3  1D03               	skipz
  2087  04B4  2CB7               	goto	u855
  2088  04B5  3002               	movlw	2
  2089  04B6  0235               	subwf	Initialize_Parameters@i,w
  2090  04B7                     u855:	
  2091  04B7  1C03               	skipc
  2092  04B8  2C99               	goto	l1093
  2093  04B9                     l1099:	
  2094                           
  2095                           ;Controller_Protocol.c: 109: for(i=0;i<1;i++){
  2096  04B9  0140               	movlb	0	; select bank0
  2097  04BA  01B5               	clrf	Initialize_Parameters@i
  2098  04BB  01B6               	clrf	Initialize_Parameters@i+1
  2099  04BC                     L1:	
  2100  04BC  0836               	movf	Initialize_Parameters@i+1,w
  2101  04BD  3A80               	xorlw	128
  2102  04BE  00D6               	movwf	??_Initialize_Parameters
  2103  04BF  3080               	movlw	128
  2104  04C0  0256               	subwf	??_Initialize_Parameters,w
  2105  04C1  1D03               	skipz
  2106  04C2  2CC5               	goto	u865
  2107  04C3  3001               	movlw	1
  2108  04C4  0235               	subwf	Initialize_Parameters@i,w
  2109  04C5                     u865:	
  2110  04C5  1803               	btfsc	3,0
  2111  04C6  0008               	return
  2112                           
  2113                           ;Controller_Protocol.c: 110: StP[i].Buffer_count = 1;
  2114  04C7  0140               	movlb	0	; select bank0
  2115  04C8  0835               	movf	Initialize_Parameters@i,w
  2116  04C9  00D6               	movwf	??_Initialize_Parameters
  2117  04CA  3001               	movlw	1
  2118  04CB                     u875:	
  2119  04CB  35D6               	lslf	??_Initialize_Parameters,f
  2120  04CC  3EFF               	addlw	-1
  2121  04CD  1D03               	skipz
  2122  04CE  2CCB               	goto	u875
  2123  04CF  3556               	lslf	??_Initialize_Parameters,w
  2124  04D0  3E28               	addlw	(low (_StP| 0))& (0+255)
  2125  04D1  0086               	movwf	6
  2126  04D2  0187               	clrf	7
  2127  04D3  3001               	movlw	1
  2128  04D4  3FC0               	movwi [0]fsr1
  2129  04D5  3000               	movlw	0
  2130  04D6  3FC1               	movwi [1]fsr1
  2131                           
  2132                           ;Controller_Protocol.c: 111: SeP[i].byte_data_complete = 1;
  2133  04D7  3005               	movlw	5
  2134  04D8  00D6               	movwf	??_Initialize_Parameters
  2135  04D9  0856               	movf	??_Initialize_Parameters,w
  2136  04DA  00D2               	movwf	___bmul@multiplicand
  2137  04DB  0835               	movf	Initialize_Parameters@i,w
  2138  04DC  3185  253E  3184   	fcall	___bmul
  2139  04DF  3E04               	addlw	4
  2140  04E0  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2141  04E1  0086               	movwf	6
  2142  04E2  0187               	clrf	7
  2143  04E3  0181               	clrf	1
  2144  04E4  0A81               	incf	1,f
  2145  04E5  3001               	movlw	1
  2146  04E6  0140               	movlb	0	; select bank0
  2147  04E7  07B5               	addwf	Initialize_Parameters@i,f
  2148  04E8  3000               	movlw	0
  2149  04E9  3DB6               	addwfc	Initialize_Parameters@i+1,f
  2150  04EA  2CBC               	goto	L1
  2151  04EB                     __end_of_Initialize_Parameters:	
  2152                           
  2153                           	psect	text5
  2154  053E                     __ptext5:	
  2155 ;; *************** function ___bmul *****************
  2156 ;; Defined at:
  2157 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul8.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  multiplier      1    wreg     unsigned char 
  2160 ;;  multiplicand    1    7[BANK0 ] unsigned char 
  2161 ;; Auto vars:     Size  Location     Type
  2162 ;;  multiplier      1   10[BANK0 ] unsigned char 
  2163 ;;  product         1    9[BANK0 ] unsigned char 
  2164 ;; Return value:  Size  Location     Type
  2165 ;;                  1    wreg      unsigned char 
  2166 ;; Registers used:
  2167 ;;		wreg, status,2, status,0
  2168 ;; Tracked objects:
  2169 ;;		On entry : 0/0
  2170 ;;		On exit  : 0/0
  2171 ;;		Unchanged: 0/0
  2172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2173 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2174 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2175 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2176 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2177 ;;Total ram usage:        4 bytes
  2178 ;; Hardware stack levels used:    1
  2179 ;; Hardware stack levels required when called:    3
  2180 ;; This function calls:
  2181 ;;		Nothing
  2182 ;; This function is called by:
  2183 ;;		_Send_Till_EndSignal
  2184 ;;		_Initialize_Parameters
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function ___bmul
  2190  053E                     ___bmul:	
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2194                           ;___bmul@multiplier stored from wreg
  2195  053E  0140               	movlb	0	; select bank0
  2196  053F  00D5               	movwf	___bmul@multiplier
  2197  0540  01D4               	clrf	___bmul@product
  2198  0541                     l955:	
  2199  0541  1C55               	btfss	___bmul@multiplier,0
  2200  0542  2D47               	goto	l959
  2201  0543  0852               	movf	___bmul@multiplicand,w
  2202  0544  00D3               	movwf	??___bmul
  2203  0545  0853               	movf	??___bmul,w
  2204  0546  07D4               	addwf	___bmul@product,f
  2205  0547                     l959:	
  2206  0547  1003               	clrc
  2207  0548  0DD2               	rlf	___bmul@multiplicand,f
  2208  0549  1003               	clrc
  2209  054A  0CD5               	rrf	___bmul@multiplier,f
  2210  054B  0855               	movf	___bmul@multiplier,w
  2211  054C  1D03               	btfss	3,2
  2212  054D  2D41               	goto	l955
  2213  054E  0854               	movf	___bmul@product,w
  2214  054F  0008               	return
  2215  0550                     __end_of___bmul:	
  2216                           
  2217                           	psect	intentry
  2218  0004                     __pintentry:	
  2219 ;; *************** function _INTERRUPT_InterruptManager *****************
  2220 ;; Defined at:
  2221 ;;		line 257 in file "Stop_main.c"
  2222 ;; Parameters:    Size  Location     Type
  2223 ;;		None
  2224 ;; Auto vars:     Size  Location     Type
  2225 ;;		None
  2226 ;; Return value:  Size  Location     Type
  2227 ;;                  1    wreg      void 
  2228 ;; Registers used:
  2229 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2230 ;; Tracked objects:
  2231 ;;		On entry : 0/0
  2232 ;;		On exit  : 0/0
  2233 ;;		Unchanged: 0/0
  2234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2237 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2238 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2239 ;;Total ram usage:        2 bytes
  2240 ;; Hardware stack levels used:    1
  2241 ;; Hardware stack levels required when called:    2
  2242 ;; This function calls:
  2243 ;;		_Send_Till_EndSignal
  2244 ;;		_Store_Datas
  2245 ;; This function is called by:
  2246 ;;		Interrupt level 1
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250  0004                     _INTERRUPT_InterruptManager:	
  2251                           
  2252                           ;incstack = 0
  2253  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
  2254                           
  2255                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+c
      +                          stack]
  2256  0005  3180               	pagesel	$
  2257  0006  0140               	movlb	0	; select bank0
  2258  0007  087F               	movf	127,w
  2259  0008  00FD               	movwf	??_INTERRUPT_InterruptManager+1
  2260                           
  2261                           ;Stop_main.c: 259: if (INTCONbits.PEIE == 1 && PIE3bits.RC2IE == 1 && PIR3bits.RC2IF == 
      +                          1) {
  2262  0009  1F0B               	btfss	11,6	;volatile
  2263  000A  2823               	goto	i1l172
  2264  000B  014E               	movlb	14	; select bank14
  2265  000C  1B99               	btfsc	25,7	;volatile
  2266  000D  1F8F               	btfss	15,7	;volatile
  2267  000E  2823               	goto	i1l172
  2268                           
  2269                           ;Stop_main.c: 262: Store_Datas(Buffer1, RC2REG, 1 * 2 + 3, 1);
  2270  000F  0154               	movlb	20	; select bank20
  2271  0010  0819               	movf	25,w	;volatile
  2272  0011  00FC               	movwf	??_INTERRUPT_InterruptManager
  2273  0012  087C               	movf	??_INTERRUPT_InterruptManager,w
  2274  0013  00F0               	movwf	Store_Datas@received_data
  2275  0014  3005               	movlw	5
  2276  0015  00F1               	movwf	Store_Datas@number_of_receive_data
  2277  0016  3000               	movlw	0
  2278  0017  00F2               	movwf	Store_Datas@number_of_receive_data+1
  2279  0018  3001               	movlw	1
  2280  0019  00F3               	movwf	Store_Datas@bus_number
  2281  001A  3000               	movlw	0
  2282  001B  00F4               	movwf	Store_Datas@bus_number+1
  2283  001C  303E               	movlw	(low (_Buffer1| 0))& (0+255)
  2284  001D  3183  2314  3180   	fcall	_Store_Datas
  2285                           
  2286                           ;Stop_main.c: 263: PIR3bits.RC2IF = 1;
  2287  0020  014E               	movlb	14	; select bank14
  2288  0021  178F               	bsf	15,7	;volatile
  2289                           
  2290                           ;Stop_main.c: 265: } else if (INTCONbits.PEIE == 1 && PIE3bits.TX2IE == 1 && PIR3bits.TX
      +                          2IF == 1) {
  2291  0022  285E               	goto	i1l179
  2292  0023                     i1l172:	
  2293  0023  1F0B               	btfss	11,6	;volatile
  2294  0024  283F               	goto	i1l174
  2295  0025  014E               	movlb	14	; select bank14
  2296  0026  1B19               	btfsc	25,6	;volatile
  2297  0027  1F0F               	btfss	15,6	;volatile
  2298  0028  283F               	goto	i1l174
  2299                           
  2300                           ;Stop_main.c: 266: Send_Till_EndSignal(TxData0, EUSART_Write, EUSART_TxInterrupt_Control
      +                          , 4, 0);
  2301  0029  3077               	movlw	low _EUSART_Write
  2302  002A  00F4               	movwf	Send_Till_EndSignal@transmission
  2303  002B  3005               	movlw	high _EUSART_Write
  2304  002C  00F5               	movwf	Send_Till_EndSignal@transmission+1
  2305  002D  306A               	movlw	low _EUSART_TxInterrupt_Control
  2306  002E  00F6               	movwf	Send_Till_EndSignal@txinterrupt_control
  2307  002F  3005               	movlw	high _EUSART_TxInterrupt_Control
  2308  0030  00F7               	movwf	Send_Till_EndSignal@txinterrupt_control+1
  2309  0031  3004               	movlw	4
  2310  0032  00F8               	movwf	Send_Till_EndSignal@number_of_txdata
  2311  0033  3000               	movlw	0
  2312  0034  00F9               	movwf	Send_Till_EndSignal@number_of_txdata+1
  2313  0035  3000               	movlw	0
  2314  0036  00FA               	movwf	Send_Till_EndSignal@bus_number
  2315  0037  00FB               	movwf	Send_Till_EndSignal@bus_number+1
  2316  0038  3043               	movlw	(low (_TxData0| 0))& (0+255)
  2317  0039  3181  21CD  3180   	fcall	_Send_Till_EndSignal
  2318                           
  2319                           ;Stop_main.c: 267: PIR3bits.TX2IF = 0;
  2320  003C  014E               	movlb	14	; select bank14
  2321  003D  130F               	bcf	15,6	;volatile
  2322                           
  2323                           ;Stop_main.c: 269: } else if (INTCONbits.PEIE == 1 && PIE3bits.RC1IE == 1 && PIR3bits.RC
      +                          1IF == 1) {
  2324  003E  285E               	goto	i1l179
  2325  003F                     i1l174:	
  2326  003F  1F0B               	btfss	11,6	;volatile
  2327  0040  2858               	goto	i1l176
  2328  0041  014E               	movlb	14	; select bank14
  2329  0042  1A99               	btfsc	25,5	;volatile
  2330  0043  1E8F               	btfss	15,5	;volatile
  2331  0044  2858               	goto	i1l176
  2332                           
  2333                           ;Stop_main.c: 271: Store_Datas(Buffer0, RC1REG, 1 * 2 + 3, 0);
  2334  0045  0142               	movlb	2	; select bank2
  2335  0046  0819               	movf	25,w	;volatile
  2336  0047  00FC               	movwf	??_INTERRUPT_InterruptManager
  2337  0048  087C               	movf	??_INTERRUPT_InterruptManager,w
  2338  0049  00F0               	movwf	Store_Datas@received_data
  2339  004A  3005               	movlw	5
  2340  004B  00F1               	movwf	Store_Datas@number_of_receive_data
  2341  004C  3000               	movlw	0
  2342  004D  00F2               	movwf	Store_Datas@number_of_receive_data+1
  2343  004E  3000               	movlw	0
  2344  004F  00F3               	movwf	Store_Datas@bus_number
  2345  0050  00F4               	movwf	Store_Datas@bus_number+1
  2346  0051  3039               	movlw	(low (_Buffer0| 0))& (0+255)
  2347  0052  3183  2314  3180   	fcall	_Store_Datas
  2348                           
  2349                           ;Stop_main.c: 272: PIR3bits.RC1IF = 1;
  2350  0055  014E               	movlb	14	; select bank14
  2351  0056  168F               	bsf	15,5	;volatile
  2352                           
  2353                           ;Stop_main.c: 274: } else if (INTCONbits.PEIE == 1 && PIE3bits.TX1IE == 1 && PIR3bits.TX
      +                          1IF == 1) {
  2354  0057  285E               	goto	i1l179
  2355  0058                     i1l176:	
  2356  0058  1F0B               	btfss	11,6	;volatile
  2357  0059  285E               	goto	i1l179
  2358  005A  014E               	movlb	14	; select bank14
  2359  005B  1E19               	btfss	25,4	;volatile
  2360  005C  285E               	goto	i1l179
  2361  005D  080F               	movf	15,w	;volatile
  2362  005E                     i1l179:	
  2363  005E  087D               	movf	??_INTERRUPT_InterruptManager+1,w
  2364  005F  0140               	movlb	0	; select bank0
  2365  0060  00FF               	movwf	127
  2366  0061  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
  2367  0062  0009               	retfie
  2368  0063                     __end_of_INTERRUPT_InterruptManager:	
  2369                           
  2370                           	psect	text7
  2371  0314                     __ptext7:	
  2372 ;; *************** function _Store_Datas *****************
  2373 ;; Defined at:
  2374 ;;		line 33 in file "Controller_Protocol.c"
  2375 ;; Parameters:    Size  Location     Type
  2376 ;;  Buffer          1    wreg     PTR struct .
  2377 ;;		 -> Buffer1(5), Buffer0(5), 
  2378 ;;  received_dat    1    0[COMMON] unsigned char 
  2379 ;;  number_of_re    2    1[COMMON] int 
  2380 ;;  bus_number      2    3[COMMON] int 
  2381 ;; Auto vars:     Size  Location     Type
  2382 ;;  Buffer          1   10[COMMON] PTR struct .
  2383 ;;		 -> Buffer1(5), Buffer0(5), 
  2384 ;; Return value:  Size  Location     Type
  2385 ;;                  1    wreg      unsigned char 
  2386 ;; Registers used:
  2387 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  2388 ;; Tracked objects:
  2389 ;;		On entry : 0/0
  2390 ;;		On exit  : 0/0
  2391 ;;		Unchanged: 0/0
  2392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2393 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2394 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2395 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2396 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2397 ;;Total ram usage:       11 bytes
  2398 ;; Hardware stack levels used:    1
  2399 ;; This function calls:
  2400 ;;		Nothing
  2401 ;; This function is called by:
  2402 ;;		_INTERRUPT_InterruptManager
  2403 ;; This function uses a non-reentrant model
  2404 ;;
  2405                           
  2406                           
  2407                           ;psect for function _Store_Datas
  2408  0314                     _Store_Datas:	
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _Store_Datas: [wreg+fsr1l+fsr1h+status,2+status,0]
  2412                           ;Store_Datas@Buffer stored from wreg
  2413  0314  00FA               	movwf	Store_Datas@Buffer
  2414                           
  2415                           ;Controller_Protocol.c: 34: if(StP[bus_number].Start_signal_has_come == 0){
  2416  0315  0873               	movf	Store_Datas@bus_number,w
  2417  0316  00F5               	movwf	??_Store_Datas
  2418  0317  3001               	movlw	1
  2419  0318                     u109_25:	
  2420  0318  35F5               	lslf	??_Store_Datas,f
  2421  0319  3EFF               	addlw	-1
  2422  031A  1D03               	skipz
  2423  031B  2B18               	goto	u109_25
  2424  031C  3575               	lslf	??_Store_Datas,w
  2425  031D  3E02               	addlw	2
  2426  031E  3E28               	addlw	(low (_StP| 0))& (0+255)
  2427  031F  0086               	movwf	6
  2428  0320  0187               	clrf	7
  2429  0321  0801               	movf	1,w
  2430  0322  1D03               	btfss	3,2
  2431  0323  2B83               	goto	i1l1137
  2432                           
  2433                           ;Controller_Protocol.c: 35: Buffer[StP[bus_number].S_flag].all_data = received_data;
  2434  0324  0870               	movf	Store_Datas@received_data,w
  2435  0325  00F5               	movwf	??_Store_Datas
  2436  0326  0873               	movf	Store_Datas@bus_number,w
  2437  0327  00F6               	movwf	??_Store_Datas+1
  2438  0328  3001               	movlw	1
  2439  0329                     u111_25:	
  2440  0329  35F6               	lslf	??_Store_Datas+1,f
  2441  032A  3EFF               	addlw	-1
  2442  032B  1D03               	skipz
  2443  032C  2B29               	goto	u111_25
  2444  032D  3576               	lslf	??_Store_Datas+1,w
  2445  032E  3E03               	addlw	3
  2446  032F  3E28               	addlw	(low (_StP| 0))& (0+255)
  2447  0330  0086               	movwf	6
  2448  0331  0187               	clrf	7
  2449  0332  0801               	movf	1,w
  2450  0333  077A               	addwf	Store_Datas@Buffer,w
  2451  0334  00F7               	movwf	??_Store_Datas+2
  2452  0335  0877               	movf	??_Store_Datas+2,w
  2453  0336  0086               	movwf	6
  2454  0337  0187               	clrf	7
  2455  0338  0875               	movf	??_Store_Datas,w
  2456  0339  0081               	movwf	1
  2457                           
  2458                           ;Controller_Protocol.c: 36: if(StP[bus_number].S_flag == 1){
  2459  033A  0873               	movf	Store_Datas@bus_number,w
  2460  033B  00F5               	movwf	??_Store_Datas
  2461  033C  3001               	movlw	1
  2462  033D                     u112_25:	
  2463  033D  35F5               	lslf	??_Store_Datas,f
  2464  033E  3EFF               	addlw	-1
  2465  033F  1D03               	skipz
  2466  0340  2B3D               	goto	u112_25
  2467  0341  3575               	lslf	??_Store_Datas,w
  2468  0342  3E03               	addlw	3
  2469  0343  3E28               	addlw	(low (_StP| 0))& (0+255)
  2470  0344  0086               	movwf	6
  2471  0345  0187               	clrf	7
  2472  0346  0301               	decf	1,w
  2473  0347  1D03               	btfss	3,2
  2474  0348  2B6D               	goto	i1l1133
  2475                           
  2476                           ;Controller_Protocol.c: 37: if(Buffer[1].lower_data == 5)StP[bus_number].Start_signal_ha
      +                          s_come = 1;
  2477  0349  0A7A               	incf	Store_Datas@Buffer,w
  2478  034A  0086               	movwf	6
  2479  034B  0187               	clrf	7
  2480  034C  0801               	movf	1,w
  2481  034D  390F               	andlw	15
  2482  034E  3A05               	xorlw	5
  2483  034F  1D03               	skipz
  2484  0350  2B5F               	goto	i1l220
  2485  0351  0873               	movf	Store_Datas@bus_number,w
  2486  0352  00F5               	movwf	??_Store_Datas
  2487  0353  3001               	movlw	1
  2488  0354                     u115_25:	
  2489  0354  35F5               	lslf	??_Store_Datas,f
  2490  0355  3EFF               	addlw	-1
  2491  0356  1D03               	skipz
  2492  0357  2B54               	goto	u115_25
  2493  0358  3575               	lslf	??_Store_Datas,w
  2494  0359  3E02               	addlw	2
  2495  035A  3E28               	addlw	(low (_StP| 0))& (0+255)
  2496  035B  0086               	movwf	6
  2497  035C  0187               	clrf	7
  2498  035D  0181               	clrf	1
  2499  035E  0A81               	incf	1,f
  2500  035F                     i1l220:	
  2501                           
  2502                           ;Controller_Protocol.c: 38: StP[bus_number].S_flag = 0;
  2503  035F  0873               	movf	Store_Datas@bus_number,w
  2504  0360  00F5               	movwf	??_Store_Datas
  2505  0361  3001               	movlw	1
  2506  0362                     u116_25:	
  2507  0362  35F5               	lslf	??_Store_Datas,f
  2508  0363  3EFF               	addlw	-1
  2509  0364  1D03               	skipz
  2510  0365  2B62               	goto	u116_25
  2511  0366  3575               	lslf	??_Store_Datas,w
  2512  0367  3E03               	addlw	3
  2513  0368  3E28               	addlw	(low (_StP| 0))& (0+255)
  2514  0369  0086               	movwf	6
  2515  036A  0187               	clrf	7
  2516  036B  0181               	clrf	1
  2517                           
  2518                           ;Controller_Protocol.c: 39: }
  2519  036C  0008               	return
  2520  036D                     i1l1133:	
  2521                           
  2522                           ;Controller_Protocol.c: 40: else if(Buffer[0].all_data == 'S')StP[bus_number].S_flag = 1
      +                          ;
  2523  036D  087A               	movf	Store_Datas@Buffer,w
  2524  036E  0086               	movwf	6
  2525  036F  0187               	clrf	7
  2526  0370  3053               	movlw	83
  2527  0371  0601               	xorwf	1,w
  2528  0372  1D03               	btfss	3,2
  2529  0373  0008               	return
  2530  0374  0873               	movf	Store_Datas@bus_number,w
  2531  0375  00F5               	movwf	??_Store_Datas
  2532  0376  3001               	movlw	1
  2533  0377                     u118_25:	
  2534  0377  35F5               	lslf	??_Store_Datas,f
  2535  0378  3EFF               	addlw	-1
  2536  0379  1D03               	skipz
  2537  037A  2B77               	goto	u118_25
  2538  037B  3575               	lslf	??_Store_Datas,w
  2539  037C  3E03               	addlw	3
  2540  037D  3E28               	addlw	(low (_StP| 0))& (0+255)
  2541  037E  0086               	movwf	6
  2542  037F  0187               	clrf	7
  2543  0380  0181               	clrf	1
  2544  0381  0A81               	incf	1,f
  2545                           
  2546                           ;Controller_Protocol.c: 41: }
  2547  0382  0008               	return
  2548  0383                     i1l1137:	
  2549                           
  2550                           ;Controller_Protocol.c: 42: else{
  2551                           ;Controller_Protocol.c: 43: StP[bus_number].Buffer_count++;
  2552  0383  0873               	movf	Store_Datas@bus_number,w
  2553  0384  00F5               	movwf	??_Store_Datas
  2554  0385  3001               	movlw	1
  2555  0386                     u119_25:	
  2556  0386  35F5               	lslf	??_Store_Datas,f
  2557  0387  3EFF               	addlw	-1
  2558  0388  1D03               	skipz
  2559  0389  2B86               	goto	u119_25
  2560  038A  3575               	lslf	??_Store_Datas,w
  2561  038B  3E28               	addlw	(low (_StP| 0))& (0+255)
  2562  038C  0086               	movwf	6
  2563  038D  0187               	clrf	7
  2564  038E  3001               	movlw	1
  2565  038F  0781               	addwf	1,f
  2566  0390  3141               	addfsr 1,1
  2567  0391  1803               	skipnc
  2568  0392  0A81               	incf	1,f
  2569                           
  2570                           ;Controller_Protocol.c: 44: Buffer[StP[bus_number].Buffer_count].all_data = received_dat
      +                          a;
  2571  0393  0870               	movf	Store_Datas@received_data,w
  2572  0394  00F5               	movwf	??_Store_Datas
  2573  0395  0873               	movf	Store_Datas@bus_number,w
  2574  0396  00F6               	movwf	??_Store_Datas+1
  2575  0397  3001               	movlw	1
  2576  0398                     u120_25:	
  2577  0398  35F6               	lslf	??_Store_Datas+1,f
  2578  0399  3EFF               	addlw	-1
  2579  039A  1D03               	skipz
  2580  039B  2B98               	goto	u120_25
  2581  039C  3576               	lslf	??_Store_Datas+1,w
  2582  039D  3E28               	addlw	(low (_StP| 0))& (0+255)
  2583  039E  0086               	movwf	6
  2584  039F  0187               	clrf	7
  2585  03A0  0801               	movf	1,w
  2586  03A1  077A               	addwf	Store_Datas@Buffer,w
  2587  03A2  00F7               	movwf	??_Store_Datas+2
  2588  03A3  0877               	movf	??_Store_Datas+2,w
  2589  03A4  0086               	movwf	6
  2590  03A5  0187               	clrf	7
  2591  03A6  0875               	movf	??_Store_Datas,w
  2592  03A7  0081               	movwf	1
  2593                           
  2594                           ;Controller_Protocol.c: 45: if(Buffer[StP[bus_number].Buffer_count].all_data == 'C'){
  2595  03A8  0873               	movf	Store_Datas@bus_number,w
  2596  03A9  00F5               	movwf	??_Store_Datas
  2597  03AA  3001               	movlw	1
  2598  03AB                     u121_25:	
  2599  03AB  35F5               	lslf	??_Store_Datas,f
  2600  03AC  3EFF               	addlw	-1
  2601  03AD  1D03               	skipz
  2602  03AE  2BAB               	goto	u121_25
  2603  03AF  3575               	lslf	??_Store_Datas,w
  2604  03B0  3E28               	addlw	(low (_StP| 0))& (0+255)
  2605  03B1  0086               	movwf	6
  2606  03B2  0187               	clrf	7
  2607  03B3  0801               	movf	1,w
  2608  03B4  077A               	addwf	Store_Datas@Buffer,w
  2609  03B5  00F6               	movwf	??_Store_Datas+1
  2610  03B6  0876               	movf	??_Store_Datas+1,w
  2611  03B7  0086               	movwf	6
  2612  03B8  0187               	clrf	7
  2613  03B9  3043               	movlw	67
  2614  03BA  0601               	xorwf	1,w
  2615  03BB  1D03               	btfss	3,2
  2616  03BC  2BF1               	goto	i1l1145
  2617                           
  2618                           ;Controller_Protocol.c: 46: if(Buffer[StP[bus_number].Buffer_count-1].upper_data == 3){
  2619  03BD  0873               	movf	Store_Datas@bus_number,w
  2620  03BE  00F5               	movwf	??_Store_Datas
  2621  03BF  3001               	movlw	1
  2622  03C0                     u123_25:	
  2623  03C0  35F5               	lslf	??_Store_Datas,f
  2624  03C1  3EFF               	addlw	-1
  2625  03C2  1D03               	skipz
  2626  03C3  2BC0               	goto	u123_25
  2627  03C4  3575               	lslf	??_Store_Datas,w
  2628  03C5  3E28               	addlw	(low (_StP| 0))& (0+255)
  2629  03C6  0086               	movwf	6
  2630  03C7  0187               	clrf	7
  2631  03C8  0801               	movf	1,w
  2632  03C9  3EFF               	addlw	-1
  2633  03CA  077A               	addwf	Store_Datas@Buffer,w
  2634  03CB  00F6               	movwf	??_Store_Datas+1
  2635  03CC  0876               	movf	??_Store_Datas+1,w
  2636  03CD  0086               	movwf	6
  2637  03CE  0187               	clrf	7
  2638  03CF  0E01               	swapf	1,w
  2639  03D0  390F               	andlw	15
  2640  03D1  3A03               	xorlw	3
  2641  03D2  1D03               	skipz
  2642  03D3  2BF1               	goto	i1l1145
  2643                           
  2644                           ;Controller_Protocol.c: 47: StP[bus_number].Buffer_count = 1;
  2645  03D4  0873               	movf	Store_Datas@bus_number,w
  2646  03D5  00F5               	movwf	??_Store_Datas
  2647  03D6  3001               	movlw	1
  2648  03D7                     u125_25:	
  2649  03D7  35F5               	lslf	??_Store_Datas,f
  2650  03D8  3EFF               	addlw	-1
  2651  03D9  1D03               	skipz
  2652  03DA  2BD7               	goto	u125_25
  2653  03DB  3575               	lslf	??_Store_Datas,w
  2654  03DC  3E28               	addlw	(low (_StP| 0))& (0+255)
  2655  03DD  0086               	movwf	6
  2656  03DE  0187               	clrf	7
  2657  03DF  3001               	movlw	1
  2658  03E0  3FC0               	movwi [0]fsr1
  2659  03E1  3000               	movlw	0
  2660  03E2  3FC1               	movwi [1]fsr1
  2661                           
  2662                           ;Controller_Protocol.c: 48: StP[bus_number].Start_signal_has_come = 0;
  2663  03E3  0873               	movf	Store_Datas@bus_number,w
  2664  03E4  00F5               	movwf	??_Store_Datas
  2665  03E5  3001               	movlw	1
  2666  03E6                     u126_25:	
  2667  03E6  35F5               	lslf	??_Store_Datas,f
  2668  03E7  3EFF               	addlw	-1
  2669  03E8  1D03               	skipz
  2670  03E9  2BE6               	goto	u126_25
  2671  03EA  3575               	lslf	??_Store_Datas,w
  2672  03EB  3E02               	addlw	2
  2673  03EC  3E28               	addlw	(low (_StP| 0))& (0+255)
  2674  03ED  0086               	movwf	6
  2675  03EE  0187               	clrf	7
  2676  03EF  0181               	clrf	1
  2677                           
  2678                           ;Controller_Protocol.c: 49: return 1;
  2679                           ;	Return value of _Store_Datas is never used
  2680  03F0  0008               	return
  2681  03F1                     i1l1145:	
  2682                           
  2683                           ;Controller_Protocol.c: 50: }
  2684                           ;Controller_Protocol.c: 51: }
  2685                           ;Controller_Protocol.c: 52: if(StP[bus_number].Buffer_count == number_of_receive_data - 
      +                          1){
  2686  03F1  0873               	movf	Store_Datas@bus_number,w
  2687  03F2  00F5               	movwf	??_Store_Datas
  2688  03F3  3001               	movlw	1
  2689  03F4                     u127_25:	
  2690  03F4  35F5               	lslf	??_Store_Datas,f
  2691  03F5  3EFF               	addlw	-1
  2692  03F6  1D03               	skipz
  2693  03F7  2BF4               	goto	u127_25
  2694  03F8  3575               	lslf	??_Store_Datas,w
  2695  03F9  3E28               	addlw	(low (_StP| 0))& (0+255)
  2696  03FA  0086               	movwf	6
  2697  03FB  0187               	clrf	7
  2698  03FC  3F40               	moviw [0]fsr1
  2699  03FD  00F6               	movwf	??_Store_Datas+1
  2700  03FE  3F41               	moviw [1]fsr1
  2701  03FF  00F7               	movwf	??_Store_Datas+2
  2702  0400  0871               	movf	Store_Datas@number_of_receive_data,w
  2703  0401  3EFF               	addlw	255
  2704  0402  00F8               	movwf	??_Store_Datas+3
  2705  0403  30FF               	movlw	255
  2706  0404  3D72               	addwfc	Store_Datas@number_of_receive_data+1,w
  2707  0405  00F9               	movwf	??_Store_Datas+4
  2708  0406  0877               	movf	??_Store_Datas+2,w
  2709  0407  0679               	xorwf	??_Store_Datas+4,w
  2710  0408  1D03               	skipz
  2711  0409  2C0C               	goto	u128_25
  2712  040A  0876               	movf	??_Store_Datas+1,w
  2713  040B  0678               	xorwf	??_Store_Datas+3,w
  2714  040C                     u128_25:	
  2715  040C  1D03               	skipz
  2716  040D  0008               	return
  2717                           
  2718                           ;Controller_Protocol.c: 53: StP[bus_number].Buffer_count = 1;
  2719  040E  0873               	movf	Store_Datas@bus_number,w
  2720  040F  00F5               	movwf	??_Store_Datas
  2721  0410  3001               	movlw	1
  2722  0411                     u129_25:	
  2723  0411  35F5               	lslf	??_Store_Datas,f
  2724  0412  3EFF               	addlw	-1
  2725  0413  1D03               	skipz
  2726  0414  2C11               	goto	u129_25
  2727  0415  3575               	lslf	??_Store_Datas,w
  2728  0416  3E28               	addlw	(low (_StP| 0))& (0+255)
  2729  0417  0086               	movwf	6
  2730  0418  0187               	clrf	7
  2731  0419  3001               	movlw	1
  2732  041A  3FC0               	movwi [0]fsr1
  2733  041B  3000               	movlw	0
  2734  041C  3FC1               	movwi [1]fsr1
  2735                           
  2736                           ;Controller_Protocol.c: 54: StP[bus_number].Start_signal_has_come = 0;
  2737  041D  0873               	movf	Store_Datas@bus_number,w
  2738  041E  00F5               	movwf	??_Store_Datas
  2739  041F  3001               	movlw	1
  2740  0420                     u130_25:	
  2741  0420  35F5               	lslf	??_Store_Datas,f
  2742  0421  3EFF               	addlw	-1
  2743  0422  1D03               	skipz
  2744  0423  2C20               	goto	u130_25
  2745  0424  3575               	lslf	??_Store_Datas,w
  2746  0425  3E02               	addlw	2
  2747  0426  3E28               	addlw	(low (_StP| 0))& (0+255)
  2748  0427  0086               	movwf	6
  2749  0428  0187               	clrf	7
  2750  0429  0181               	clrf	1
  2751                           
  2752                           ;Controller_Protocol.c: 55: }
  2753                           ;Controller_Protocol.c: 56: return 0;
  2754                           ;	Return value of _Store_Datas is never used
  2755  042A  0008               	return
  2756  042B                     __end_of_Store_Datas:	
  2757                           
  2758                           	psect	text8
  2759  01CD                     __ptext8:	
  2760 ;; *************** function _Send_Till_EndSignal *****************
  2761 ;; Defined at:
  2762 ;;		line 68 in file "Controller_Protocol.c"
  2763 ;; Parameters:    Size  Location     Type
  2764 ;;  TxData          1    wreg     PTR unsigned char 
  2765 ;;		 -> TxData0(4), 
  2766 ;;  transmission    2    4[COMMON] PTR FTN(unsigned char ,)
  2767 ;;		 -> EUSART_Write(1), 
  2768 ;;  txinterrupt_    2    6[COMMON] PTR FTN(unsigned char ,)
  2769 ;;		 -> EUSART_TxInterrupt_Control(1), 
  2770 ;;  number_of_tx    2    8[COMMON] int 
  2771 ;;  bus_number      2   10[COMMON] int 
  2772 ;; Auto vars:     Size  Location     Type
  2773 ;;  TxData          1    6[BANK0 ] PTR unsigned char 
  2774 ;;		 -> TxData0(4), 
  2775 ;;  a               2    4[BANK0 ] int 
  2776 ;; Return value:  Size  Location     Type
  2777 ;;                  1    wreg      void 
  2778 ;; Registers used:
  2779 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  2780 ;; Tracked objects:
  2781 ;;		On entry : 0/0
  2782 ;;		On exit  : 0/0
  2783 ;;		Unchanged: 0/0
  2784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  2785 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2786 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2787 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2788 ;;      Totals:         8       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  2789 ;;Total ram usage:       15 bytes
  2790 ;; Hardware stack levels used:    1
  2791 ;; Hardware stack levels required when called:    1
  2792 ;; This function calls:
  2793 ;;		_EUSART_TxInterrupt_Control
  2794 ;;		_EUSART_Write
  2795 ;;		i1___bmul
  2796 ;; This function is called by:
  2797 ;;		_INTERRUPT_InterruptManager
  2798 ;; This function uses a non-reentrant model
  2799 ;;
  2800                           
  2801                           
  2802                           ;psect for function _Send_Till_EndSignal
  2803  01CD                     _Send_Till_EndSignal:	
  2804                           
  2805                           ;incstack = 0
  2806                           ; Regs used in _Send_Till_EndSignal: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  2807                           ;Send_Till_EndSignal@TxData stored from wreg
  2808  01CD  0140               	movlb	0	; select bank0
  2809  01CE  00D1               	movwf	Send_Till_EndSignal@TxData
  2810                           
  2811                           ;Controller_Protocol.c: 69: int a = 0;
  2812  01CF  01CF               	clrf	Send_Till_EndSignal@a
  2813  01D0  01D0               	clrf	Send_Till_EndSignal@a+1
  2814                           
  2815                           ;Controller_Protocol.c: 70: if(SeP[bus_number].data_send_count != number_of_txdata){
  2816  01D1  3005               	movlw	5
  2817  01D2  00CB               	movwf	??_Send_Till_EndSignal
  2818  01D3  084B               	movf	??_Send_Till_EndSignal,w
  2819  01D4  00F0               	movwf	i1___bmul@multiplicand
  2820  01D5  087A               	movf	Send_Till_EndSignal@bus_number,w
  2821  01D6  3185  2550  3181   	fcall	i1___bmul
  2822  01D9  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2823  01DA  0086               	movwf	6
  2824  01DB  0187               	clrf	7
  2825  01DC  3F40               	moviw [0]fsr1
  2826  01DD  0140               	movlb	0	; select bank0
  2827  01DE  00CC               	movwf	??_Send_Till_EndSignal+1
  2828  01DF  3F41               	moviw [1]fsr1
  2829  01E0  00CD               	movwf	??_Send_Till_EndSignal+2
  2830  01E1  0879               	movf	Send_Till_EndSignal@number_of_txdata+1,w
  2831  01E2  064D               	xorwf	??_Send_Till_EndSignal+2,w
  2832  01E3  1D03               	skipz
  2833  01E4  29E7               	goto	u131_25
  2834  01E5  0878               	movf	Send_Till_EndSignal@number_of_txdata,w
  2835  01E6  064C               	xorwf	??_Send_Till_EndSignal+1,w
  2836  01E7                     u131_25:	
  2837  01E7  1903               	skipnz
  2838  01E8  2A8F               	goto	i1l1161
  2839                           
  2840                           ;Controller_Protocol.c: 71: if(SeP[bus_number].byte_data_complete == 1){
  2841  01E9  3005               	movlw	5
  2842  01EA  00CB               	movwf	??_Send_Till_EndSignal
  2843  01EB  084B               	movf	??_Send_Till_EndSignal,w
  2844  01EC  00F0               	movwf	i1___bmul@multiplicand
  2845  01ED  087A               	movf	Send_Till_EndSignal@bus_number,w
  2846  01EE  3185  2550  3181   	fcall	i1___bmul
  2847  01F1  3E04               	addlw	4
  2848  01F2  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2849  01F3  0086               	movwf	6
  2850  01F4  0187               	clrf	7
  2851  01F5  0301               	decf	1,w
  2852  01F6  1D03               	btfss	3,2
  2853  01F7  2A2B               	goto	i1l1159
  2854                           
  2855                           ;Controller_Protocol.c: 72: a = SeP[bus_number].data_send_count;
  2856  01F8  3005               	movlw	5
  2857  01F9  0140               	movlb	0	; select bank0
  2858  01FA  00CB               	movwf	??_Send_Till_EndSignal
  2859  01FB  084B               	movf	??_Send_Till_EndSignal,w
  2860  01FC  00F0               	movwf	i1___bmul@multiplicand
  2861  01FD  087A               	movf	Send_Till_EndSignal@bus_number,w
  2862  01FE  3185  2550  3181   	fcall	i1___bmul
  2863  0201  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2864  0202  0086               	movwf	6
  2865  0203  0187               	clrf	7
  2866  0204  3F40               	moviw [0]fsr1
  2867  0205  0140               	movlb	0	; select bank0
  2868  0206  00CF               	movwf	Send_Till_EndSignal@a
  2869  0207  3F41               	moviw [1]fsr1
  2870  0208  00D0               	movwf	Send_Till_EndSignal@a+1
  2871                           
  2872                           ;Controller_Protocol.c: 73: transmission((TxData[a] & 0xf0) | (not_of_before_data & 0x0f
      +                          ));
  2873  0209  300F               	movlw	15
  2874  020A  0538               	andwf	_not_of_before_data,w
  2875  020B  00CB               	movwf	??_Send_Till_EndSignal
  2876  020C  084F               	movf	Send_Till_EndSignal@a,w
  2877  020D  0751               	addwf	Send_Till_EndSignal@TxData,w
  2878  020E  00CC               	movwf	??_Send_Till_EndSignal+1
  2879  020F  084C               	movf	??_Send_Till_EndSignal+1,w
  2880  0210  0086               	movwf	6
  2881  0211  0187               	clrf	7
  2882  0212  0801               	movf	1,w
  2883  0213  39F0               	andlw	240
  2884  0214  044B               	iorwf	??_Send_Till_EndSignal,w
  2885  0215  00CD               	movwf	??_Send_Till_EndSignal+2
  2886  0216  084D               	movf	??_Send_Till_EndSignal+2,w
  2887  0217  00F0               	movwf	EUSART_Write@txData
  2888  0218  0875               	movf	Send_Till_EndSignal@transmission+1,w
  2889  0219  008A               	movwf	10
  2890  021A  0874               	movf	Send_Till_EndSignal@transmission,w
  2891  021B  000A               	callw
  2892  021C  3181               	pagesel	$
  2893                           
  2894                           ;Controller_Protocol.c: 74: SeP[bus_number].byte_data_complete = 0;
  2895  021D  3005               	movlw	5
  2896  021E  0140               	movlb	0	; select bank0
  2897  021F  00CB               	movwf	??_Send_Till_EndSignal
  2898  0220  084B               	movf	??_Send_Till_EndSignal,w
  2899  0221  00F0               	movwf	i1___bmul@multiplicand
  2900  0222  087A               	movf	Send_Till_EndSignal@bus_number,w
  2901  0223  3185  2550         	fcall	i1___bmul
  2902  0225  3E04               	addlw	4
  2903  0226  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2904  0227  0086               	movwf	6
  2905  0228  0187               	clrf	7
  2906  0229  0181               	clrf	1
  2907                           
  2908                           ;Controller_Protocol.c: 75: }
  2909  022A  0008               	return
  2910  022B                     i1l1159:	
  2911                           
  2912                           ;Controller_Protocol.c: 76: else {
  2913                           ;Controller_Protocol.c: 77: not_of_before_data = ~TxData[SeP[bus_number].data_send_count
      +                          ];
  2914  022B  3005               	movlw	5
  2915  022C  0140               	movlb	0	; select bank0
  2916  022D  00CB               	movwf	??_Send_Till_EndSignal
  2917  022E  084B               	movf	??_Send_Till_EndSignal,w
  2918  022F  00F0               	movwf	i1___bmul@multiplicand
  2919  0230  087A               	movf	Send_Till_EndSignal@bus_number,w
  2920  0231  3185  2550  3181   	fcall	i1___bmul
  2921  0234  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2922  0235  0086               	movwf	6
  2923  0236  0187               	clrf	7
  2924  0237  0801               	movf	1,w
  2925  0238  0140               	movlb	0	; select bank0
  2926  0239  0751               	addwf	Send_Till_EndSignal@TxData,w
  2927  023A  00CC               	movwf	??_Send_Till_EndSignal+1
  2928  023B  084C               	movf	??_Send_Till_EndSignal+1,w
  2929  023C  0086               	movwf	6
  2930  023D  0187               	clrf	7
  2931  023E  0901               	comf	1,w
  2932  023F  00CD               	movwf	??_Send_Till_EndSignal+2
  2933  0240  084D               	movf	??_Send_Till_EndSignal+2,w
  2934  0241  00B8               	movwf	_not_of_before_data
  2935                           
  2936                           ;Controller_Protocol.c: 78: a = SeP[bus_number].data_send_count;
  2937  0242  3005               	movlw	5
  2938  0243  00CB               	movwf	??_Send_Till_EndSignal
  2939  0244  084B               	movf	??_Send_Till_EndSignal,w
  2940  0245  00F0               	movwf	i1___bmul@multiplicand
  2941  0246  087A               	movf	Send_Till_EndSignal@bus_number,w
  2942  0247  3185  2550  3181   	fcall	i1___bmul
  2943  024A  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2944  024B  0086               	movwf	6
  2945  024C  0187               	clrf	7
  2946  024D  3F40               	moviw [0]fsr1
  2947  024E  0140               	movlb	0	; select bank0
  2948  024F  00CF               	movwf	Send_Till_EndSignal@a
  2949  0250  3F41               	moviw [1]fsr1
  2950  0251  00D0               	movwf	Send_Till_EndSignal@a+1
  2951                           
  2952                           ;Controller_Protocol.c: 79: transmission((TxData[a] << 4) | (not_of_before_data >> 4));
  2953  0252  0838               	movf	_not_of_before_data,w
  2954  0253  00CB               	movwf	??_Send_Till_EndSignal
  2955  0254  3004               	movlw	4
  2956  0255                     u133_25:	
  2957  0255  36CB               	lsrf	??_Send_Till_EndSignal,f
  2958  0256  0B89               	decfsz	9,f
  2959  0257  2A55               	goto	u133_25
  2960  0258  084F               	movf	Send_Till_EndSignal@a,w
  2961  0259  0751               	addwf	Send_Till_EndSignal@TxData,w
  2962  025A  00CC               	movwf	??_Send_Till_EndSignal+1
  2963  025B  084C               	movf	??_Send_Till_EndSignal+1,w
  2964  025C  0086               	movwf	6
  2965  025D  0187               	clrf	7
  2966  025E  0801               	movf	1,w
  2967  025F  00CD               	movwf	??_Send_Till_EndSignal+2
  2968  0260  3003               	movlw	3
  2969  0261                     u134_25:	
  2970  0261  35CD               	lslf	??_Send_Till_EndSignal+2,f
  2971  0262  3EFF               	addlw	-1
  2972  0263  1D03               	skipz
  2973  0264  2A61               	goto	u134_25
  2974  0265  354D               	lslf	??_Send_Till_EndSignal+2,w
  2975  0266  044B               	iorwf	??_Send_Till_EndSignal,w
  2976  0267  00CE               	movwf	??_Send_Till_EndSignal+3
  2977  0268  084E               	movf	??_Send_Till_EndSignal+3,w
  2978  0269  00F0               	movwf	EUSART_Write@txData
  2979  026A  0875               	movf	Send_Till_EndSignal@transmission+1,w
  2980  026B  008A               	movwf	10
  2981  026C  0874               	movf	Send_Till_EndSignal@transmission,w
  2982  026D  000A               	callw
  2983  026E  3181               	pagesel	$
  2984                           
  2985                           ;Controller_Protocol.c: 80: SeP[bus_number].byte_data_complete = 1;
  2986  026F  3005               	movlw	5
  2987  0270  0140               	movlb	0	; select bank0
  2988  0271  00CB               	movwf	??_Send_Till_EndSignal
  2989  0272  084B               	movf	??_Send_Till_EndSignal,w
  2990  0273  00F0               	movwf	i1___bmul@multiplicand
  2991  0274  087A               	movf	Send_Till_EndSignal@bus_number,w
  2992  0275  3185  2550  3181   	fcall	i1___bmul
  2993  0278  3E04               	addlw	4
  2994  0279  3E30               	addlw	(low (_SeP| 0))& (0+255)
  2995  027A  0086               	movwf	6
  2996  027B  0187               	clrf	7
  2997  027C  0181               	clrf	1
  2998  027D  0A81               	incf	1,f
  2999                           
  3000                           ;Controller_Protocol.c: 81: SeP[bus_number].data_send_count++;
  3001  027E  3005               	movlw	5
  3002  027F  0140               	movlb	0	; select bank0
  3003  0280  00CB               	movwf	??_Send_Till_EndSignal
  3004  0281  084B               	movf	??_Send_Till_EndSignal,w
  3005  0282  00F0               	movwf	i1___bmul@multiplicand
  3006  0283  087A               	movf	Send_Till_EndSignal@bus_number,w
  3007  0284  3185  2550         	fcall	i1___bmul
  3008  0286  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3009  0287  0086               	movwf	6
  3010  0288  0187               	clrf	7
  3011  0289  3001               	movlw	1
  3012  028A  0781               	addwf	1,f
  3013  028B  3141               	addfsr 1,1
  3014  028C  1803               	skipnc
  3015  028D  0A81               	incf	1,f
  3016                           
  3017                           ;Controller_Protocol.c: 82: }
  3018                           ;Controller_Protocol.c: 83: }
  3019  028E  0008               	return
  3020  028F                     i1l1161:	
  3021                           
  3022                           ;Controller_Protocol.c: 84: else{
  3023                           ;Controller_Protocol.c: 85: if(SeP[bus_number].last_signal == 0){
  3024  028F  3005               	movlw	5
  3025  0290  0140               	movlb	0	; select bank0
  3026  0291  00CB               	movwf	??_Send_Till_EndSignal
  3027  0292  084B               	movf	??_Send_Till_EndSignal,w
  3028  0293  00F0               	movwf	i1___bmul@multiplicand
  3029  0294  087A               	movf	Send_Till_EndSignal@bus_number,w
  3030  0295  3185  2550  3181   	fcall	i1___bmul
  3031  0298  3E02               	addlw	2
  3032  0299  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3033  029A  0086               	movwf	6
  3034  029B  0187               	clrf	7
  3035  029C  0016               	moviw fsr1++
  3036  029D  0401               	iorwf	1,w
  3037  029E  1D03               	btfss	3,2
  3038  029F  2ABE               	goto	i1l1167
  3039                           
  3040                           ;Controller_Protocol.c: 86: transmission(0x30 | (not_of_before_data & 0x0f));
  3041  02A0  0140               	movlb	0	; select bank0
  3042  02A1  0838               	movf	_not_of_before_data,w
  3043  02A2  390F               	andlw	15
  3044  02A3  3830               	iorlw	48
  3045  02A4  00CB               	movwf	??_Send_Till_EndSignal
  3046  02A5  084B               	movf	??_Send_Till_EndSignal,w
  3047  02A6  00F0               	movwf	EUSART_Write@txData
  3048  02A7  0875               	movf	Send_Till_EndSignal@transmission+1,w
  3049  02A8  008A               	movwf	10
  3050  02A9  0874               	movf	Send_Till_EndSignal@transmission,w
  3051  02AA  000A               	callw
  3052  02AB  3181               	pagesel	$
  3053                           
  3054                           ;Controller_Protocol.c: 87: SeP[bus_number].last_signal++;
  3055  02AC  3005               	movlw	5
  3056  02AD  0140               	movlb	0	; select bank0
  3057  02AE  00CB               	movwf	??_Send_Till_EndSignal
  3058  02AF  084B               	movf	??_Send_Till_EndSignal,w
  3059  02B0  00F0               	movwf	i1___bmul@multiplicand
  3060  02B1  087A               	movf	Send_Till_EndSignal@bus_number,w
  3061  02B2  3185  2550         	fcall	i1___bmul
  3062  02B4  3E02               	addlw	2
  3063  02B5  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3064  02B6  0086               	movwf	6
  3065  02B7  0187               	clrf	7
  3066  02B8  3001               	movlw	1
  3067  02B9  0781               	addwf	1,f
  3068  02BA  3141               	addfsr 1,1
  3069  02BB  1803               	skipnc
  3070  02BC  0A81               	incf	1,f
  3071                           
  3072                           ;Controller_Protocol.c: 88: }
  3073  02BD  0008               	return
  3074  02BE                     i1l1167:	
  3075                           
  3076                           ;Controller_Protocol.c: 89: else if(SeP[bus_number].last_signal == 1){
  3077  02BE  3005               	movlw	5
  3078  02BF  0140               	movlb	0	; select bank0
  3079  02C0  00CB               	movwf	??_Send_Till_EndSignal
  3080  02C1  084B               	movf	??_Send_Till_EndSignal,w
  3081  02C2  00F0               	movwf	i1___bmul@multiplicand
  3082  02C3  087A               	movf	Send_Till_EndSignal@bus_number,w
  3083  02C4  3185  2550  3181   	fcall	i1___bmul
  3084  02C7  3E02               	addlw	2
  3085  02C8  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3086  02C9  0086               	movwf	6
  3087  02CA  0187               	clrf	7
  3088  02CB  0016               	moviw fsr1++
  3089  02CC  3A01               	xorlw	1
  3090  02CD  0140               	movlb	0	; select bank0
  3091  02CE  00CC               	movwf	??_Send_Till_EndSignal+1
  3092  02CF  0016               	moviw fsr1++
  3093  02D0  04CC               	iorwf	??_Send_Till_EndSignal+1,f
  3094  02D1  1D03               	btfss	3,2
  3095  02D2  2AEE               	goto	i1l1173
  3096                           
  3097                           ;Controller_Protocol.c: 90: transmission('C');
  3098  02D3  3043               	movlw	67
  3099  02D4  00CB               	movwf	??_Send_Till_EndSignal
  3100  02D5  084B               	movf	??_Send_Till_EndSignal,w
  3101  02D6  00F0               	movwf	EUSART_Write@txData
  3102  02D7  0875               	movf	Send_Till_EndSignal@transmission+1,w
  3103  02D8  008A               	movwf	10
  3104  02D9  0874               	movf	Send_Till_EndSignal@transmission,w
  3105  02DA  000A               	callw
  3106  02DB  3181               	pagesel	$
  3107                           
  3108                           ;Controller_Protocol.c: 91: SeP[bus_number].last_signal++;
  3109  02DC  3005               	movlw	5
  3110  02DD  0140               	movlb	0	; select bank0
  3111  02DE  00CB               	movwf	??_Send_Till_EndSignal
  3112  02DF  084B               	movf	??_Send_Till_EndSignal,w
  3113  02E0  00F0               	movwf	i1___bmul@multiplicand
  3114  02E1  087A               	movf	Send_Till_EndSignal@bus_number,w
  3115  02E2  3185  2550         	fcall	i1___bmul
  3116  02E4  3E02               	addlw	2
  3117  02E5  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3118  02E6  0086               	movwf	6
  3119  02E7  0187               	clrf	7
  3120  02E8  3001               	movlw	1
  3121  02E9  0781               	addwf	1,f
  3122  02EA  3141               	addfsr 1,1
  3123  02EB  1803               	skipnc
  3124  02EC  0A81               	incf	1,f
  3125                           
  3126                           ;Controller_Protocol.c: 92: }
  3127  02ED  0008               	return
  3128  02EE                     i1l1173:	
  3129                           
  3130                           ;Controller_Protocol.c: 93: else {
  3131                           ;Controller_Protocol.c: 94: SeP[bus_number].last_signal = 0;
  3132  02EE  3005               	movlw	5
  3133  02EF  0140               	movlb	0	; select bank0
  3134  02F0  00CB               	movwf	??_Send_Till_EndSignal
  3135  02F1  084B               	movf	??_Send_Till_EndSignal,w
  3136  02F2  00F0               	movwf	i1___bmul@multiplicand
  3137  02F3  087A               	movf	Send_Till_EndSignal@bus_number,w
  3138  02F4  3185  2550  3181   	fcall	i1___bmul
  3139  02F7  3E02               	addlw	2
  3140  02F8  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3141  02F9  0086               	movwf	6
  3142  02FA  0187               	clrf	7
  3143  02FB  3000               	movlw	0
  3144  02FC  3FC0               	movwi [0]fsr1
  3145  02FD  3FC1               	movwi [1]fsr1
  3146                           
  3147                           ;Controller_Protocol.c: 95: SeP[bus_number].data_send_count = 0;
  3148  02FE  3005               	movlw	5
  3149  02FF  0140               	movlb	0	; select bank0
  3150  0300  00CB               	movwf	??_Send_Till_EndSignal
  3151  0301  084B               	movf	??_Send_Till_EndSignal,w
  3152  0302  00F0               	movwf	i1___bmul@multiplicand
  3153  0303  087A               	movf	Send_Till_EndSignal@bus_number,w
  3154  0304  3185  2550  3181   	fcall	i1___bmul
  3155  0307  3E30               	addlw	(low (_SeP| 0))& (0+255)
  3156  0308  0086               	movwf	6
  3157  0309  0187               	clrf	7
  3158  030A  3000               	movlw	0
  3159  030B  3FC0               	movwi [0]fsr1
  3160  030C  3FC1               	movwi [1]fsr1
  3161                           
  3162                           ;Controller_Protocol.c: 96: txinterrupt_control(0);
  3163  030D  01F0               	clrf	EUSART_TxInterrupt_Control@enable_or_disable
  3164  030E  0877               	movf	Send_Till_EndSignal@txinterrupt_control+1,w
  3165  030F  008A               	movwf	10
  3166  0310  0876               	movf	Send_Till_EndSignal@txinterrupt_control,w
  3167  0311  000A               	callw
  3168  0312  3181               	pagesel	$
  3169  0313  0008               	return
  3170  0314                     __end_of_Send_Till_EndSignal:	
  3171                           
  3172                           	psect	text9
  3173  0550                     __ptext9:	
  3174 ;; *************** function i1___bmul *****************
  3175 ;; Defined at:
  3176 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.40\sources\common\Umul8.c"
  3177 ;; Parameters:    Size  Location     Type
  3178 ;;  multiplier      1    wreg     unsigned char 
  3179 ;;  multiplicand    1    0[COMMON] unsigned char 
  3180 ;; Auto vars:     Size  Location     Type
  3181 ;;  multiplier      1    2[COMMON] unsigned char 
  3182 ;;  __bmul          1    3[COMMON] unsigned char 
  3183 ;; Return value:  Size  Location     Type
  3184 ;;                  1    wreg      unsigned char 
  3185 ;; Registers used:
  3186 ;;		wreg, status,2, status,0
  3187 ;; Tracked objects:
  3188 ;;		On entry : 0/0
  3189 ;;		On exit  : 0/0
  3190 ;;		Unchanged: 0/0
  3191 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3192 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3194 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3195 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3196 ;;Total ram usage:        4 bytes
  3197 ;; Hardware stack levels used:    1
  3198 ;; This function calls:
  3199 ;;		Nothing
  3200 ;; This function is called by:
  3201 ;;		_Send_Till_EndSignal
  3202 ;; This function uses a non-reentrant model
  3203 ;;
  3204                           
  3205                           
  3206                           ;psect for function i1___bmul
  3207  0550                     i1___bmul:	
  3208                           
  3209                           ;incstack = 0
  3210                           ; Regs used in i1___bmul: [wreg+status,2+status,0]
  3211                           ;i1___bmul@multiplier stored from wreg
  3212  0550  00F2               	movwf	i1___bmul@multiplier
  3213  0551  01F3               	clrf	i1___bmul@product
  3214  0552                     i1l969:	
  3215  0552  1C72               	btfss	i1___bmul@multiplier,0
  3216  0553  2D58               	goto	i1l973
  3217  0554  0870               	movf	i1___bmul@multiplicand,w
  3218  0555  00F1               	movwf	??i1___bmul
  3219  0556  0871               	movf	??i1___bmul,w
  3220  0557  07F3               	addwf	i1___bmul@product,f
  3221  0558                     i1l973:	
  3222  0558  1003               	clrc
  3223  0559  0DF0               	rlf	i1___bmul@multiplicand,f
  3224  055A  1003               	clrc
  3225  055B  0CF2               	rrf	i1___bmul@multiplier,f
  3226  055C  0872               	movf	i1___bmul@multiplier,w
  3227  055D  1D03               	btfss	3,2
  3228  055E  2D52               	goto	i1l969
  3229  055F  0873               	movf	i1___bmul@product,w
  3230  0560  0008               	return
  3231  0561                     __end_ofi1___bmul:	
  3232                           
  3233                           	psect	text10
  3234  0577                     __ptext10:	
  3235 ;; *************** function _EUSART_Write *****************
  3236 ;; Defined at:
  3237 ;;		line 279 in file "Stop_main.c"
  3238 ;; Parameters:    Size  Location     Type
  3239 ;;  txData          1    0[COMMON] unsigned char 
  3240 ;; Auto vars:     Size  Location     Type
  3241 ;;		None
  3242 ;; Return value:  Size  Location     Type
  3243 ;;                  1    wreg      void 
  3244 ;; Registers used:
  3245 ;;		wreg
  3246 ;; Tracked objects:
  3247 ;;		On entry : 0/0
  3248 ;;		On exit  : 0/0
  3249 ;;		Unchanged: 0/0
  3250 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3251 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3252 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3254 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3255 ;;Total ram usage:        1 bytes
  3256 ;; Hardware stack levels used:    1
  3257 ;; This function calls:
  3258 ;;		Nothing
  3259 ;; This function is called by:
  3260 ;;		_INTERRUPT_InterruptManager
  3261 ;;		_Send_Till_EndSignal
  3262 ;; This function uses a non-reentrant model
  3263 ;;
  3264                           
  3265                           
  3266                           ;psect for function _EUSART_Write
  3267  0577                     _EUSART_Write:	
  3268                           
  3269                           ;Stop_main.c: 280: TX2REG = txData;
  3270                           
  3271                           ;incstack = 0
  3272                           ; Regs used in _EUSART_Write: [wreg]
  3273  0577  0870               	movf	EUSART_Write@txData,w
  3274  0578  0154               	movlb	20	; select bank20
  3275  0579  009A               	movwf	26	;volatile
  3276  057A  0008               	return
  3277  057B                     __end_of_EUSART_Write:	
  3278                           
  3279                           	psect	text11
  3280  056A                     __ptext11:	
  3281 ;; *************** function _EUSART_TxInterrupt_Control *****************
  3282 ;; Defined at:
  3283 ;;		line 284 in file "Stop_main.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;  enable_or_di    1    0[COMMON] unsigned char 
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,0
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15  BANK16  BANK17  BANK18  BANK19  BANK20  BANK21  BANK22  BANK23  BANK24  BANK25
  3297 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3300 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0       0       0       0       0       0       0       0       0       0       0
  3301 ;;Total ram usage:        1 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; This function calls:
  3304 ;;		Nothing
  3305 ;; This function is called by:
  3306 ;;		_INTERRUPT_InterruptManager
  3307 ;;		_Send_Till_EndSignal
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           
  3312                           ;psect for function _EUSART_TxInterrupt_Control
  3313  056A                     _EUSART_TxInterrupt_Control:	
  3314                           
  3315                           ;Stop_main.c: 285: PIE3bits. TX2IE = enable_or_disable;
  3316                           
  3317                           ;incstack = 0
  3318                           ; Regs used in _EUSART_TxInterrupt_Control: [wreg+status,0]
  3319  056A  0C70               	rrf	EUSART_TxInterrupt_Control@enable_or_disable,w
  3320  056B  014E               	movlb	14	; select bank14
  3321  056C  1C03               	skipc
  3322  056D  1319               	bcf	25,6	;volatile
  3323  056E  1803               	skipnc
  3324  056F  1719               	bsf	25,6	;volatile
  3325  0570  0008               	return
  3326  0571                     __end_of_EUSART_TxInterrupt_Control:	
  3327  007E                     btemp	set	126	;btemp
  3328  007E                     int$flags	set	126
  3329  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         43
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     21      64
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            80      0       0
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           80      0       0
    BANK11           80      0       0
    BANK12           80      0       0
    BANK13           80      0       0
    BANK14           80      0       0
    BANK15           80      0       0
    BANK16           80      0       0
    BANK17           80      0       0
    BANK18           80      0       0
    BANK19           80      0       0
    BANK20           80      0       0
    BANK21           80      0       0
    BANK22           80      0       0
    BANK23           80      0       0
    BANK24           80      0       0
    BANK25           32      0       0

Pointer List with Targets:

    Send_Till_EndSignal@txinterrupt_control	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_TxInterrupt_Control(), 

    Send_Till_EndSignal@TxData	PTR unsigned char  size(1) Largest target is 4
		 -> TxData0(BANK0[4]), 

    Send_Till_EndSignal@transmission	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> EUSART_Write(), 

    Store_Datas@Buffer	PTR struct . size(1) Largest target is 5
		 -> Buffer1(BANK0[5]), Buffer0(BANK0[5]), 

    Organize_Datas@Buffer	PTR struct . size(1) Largest target is 5
		 -> Buffer1(BANK0[5]), Buffer0(BANK0[5]), 

    Organize_Datas@RxData	PTR struct . size(1) Largest target is 2
		 -> RxData1(BANK0[2]), RxData0(BANK0[2]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_Send_Till_EndSignal
    _Send_Till_EndSignal->i1___bmul

Critical Paths under _main in BANK0

    _main->_Organize_Datas
    _Initialize_Parameters->___bmul

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    _INTERRUPT_InterruptManager->_Send_Till_EndSignal

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK15

    None.

Critical Paths under _main in BANK16

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK16

    None.

Critical Paths under _main in BANK17

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK17

    None.

Critical Paths under _main in BANK18

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK18

    None.

Critical Paths under _main in BANK19

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK19

    None.

Critical Paths under _main in BANK20

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK20

    None.

Critical Paths under _main in BANK21

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK21

    None.

Critical Paths under _main in BANK22

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK22

    None.

Critical Paths under _main in BANK23

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK23

    None.

Critical Paths under _main in BANK24

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK24

    None.

Critical Paths under _main in BANK25

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK25

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1322
                                             18 BANK0      3     3      0
              _Initialize_Parameters
                     _Organize_Datas
             _PIN_MANAGER_Initialize
                         _setup_TMR1
 ---------------------------------------------------------------------------------
 (1) _setup_TMR1                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PIN_MANAGER_Initialize                               1     1      0       1
                                              7 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _Organize_Datas                                      11     6      5    1104
                                              7 BANK0     11     6      5
 ---------------------------------------------------------------------------------
 (1) _Initialize_Parameters                                1     1      0     216
                                             11 BANK0      1     1      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (2) ___bmul                                               4     3      1     216
                                              7 BANK0      4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _INTERRUPT_InterruptManager                           2     2      0    2404
                                             12 COMMON     2     2      0
                _Send_Till_EndSignal
                        _Store_Datas
 ---------------------------------------------------------------------------------
 (4) _Store_Datas                                         11     6      5     972
                                              0 COMMON    11     6      5
 ---------------------------------------------------------------------------------
 (4) _Send_Till_EndSignal                                 15     7      8    1432
                                              4 COMMON     8     0      8
                                              0 BANK0      7     7      0
         _EUSART_TxInterrupt_Control *
                       _EUSART_Write *
                           i1___bmul
 ---------------------------------------------------------------------------------
 (5) i1___bmul                                             4     3      1     334
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         1     0      1     194
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 (5) _EUSART_TxInterrupt_Control                           1     0      1      65
                                              0 COMMON     1     0      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initialize_Parameters
     ___bmul
   _Organize_Datas
   _PIN_MANAGER_Initialize
   _setup_TMR1

 _INTERRUPT_InterruptManager (ROOT)
   _Send_Till_EndSignal
     _EUSART_TxInterrupt_Control *
     _EUSART_Write *
     i1___bmul *
   _Store_Datas

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7F0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     15      40       5       80.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
ABS                  0      0      4E       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            50      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITBANK7            50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BANK7               50      0       0      20        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              50      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BANK11              50      0       0      28        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITBANK12           50      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BANK12              50      0       0      30        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITBANK13           50      0       0      31        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BANK13              50      0       0      32        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%
BITBANK14           50      0       0      33        0.0%
BITSFR32             0      0       0      33        0.0%
SFR32                0      0       0      33        0.0%
BANK14              50      0       0      34        0.0%
BITSFR33             0      0       0      34        0.0%
SFR33                0      0       0      34        0.0%
BITBANK15           50      0       0      35        0.0%
BITSFR34             0      0       0      35        0.0%
SFR34                0      0       0      35        0.0%
BANK15              50      0       0      36        0.0%
BITSFR35             0      0       0      36        0.0%
SFR35                0      0       0      36        0.0%
BITBANK16           50      0       0      37        0.0%
BITSFR36             0      0       0      37        0.0%
SFR36                0      0       0      37        0.0%
BANK16              50      0       0      38        0.0%
BITSFR37             0      0       0      38        0.0%
SFR37                0      0       0      38        0.0%
BITBANK17           50      0       0      39        0.0%
BITSFR38             0      0       0      39        0.0%
SFR38                0      0       0      39        0.0%
BANK17              50      0       0      40        0.0%
BITSFR39             0      0       0      40        0.0%
SFR39                0      0       0      40        0.0%
BITBANK18           50      0       0      41        0.0%
BITSFR40             0      0       0      41        0.0%
SFR40                0      0       0      41        0.0%
BANK18              50      0       0      42        0.0%
BITSFR41             0      0       0      42        0.0%
SFR41                0      0       0      42        0.0%
BITBANK19           50      0       0      43        0.0%
BITSFR42             0      0       0      43        0.0%
SFR42                0      0       0      43        0.0%
BANK19              50      0       0      44        0.0%
BITSFR43             0      0       0      44        0.0%
SFR43                0      0       0      44        0.0%
BITBANK20           50      0       0      45        0.0%
BITSFR44             0      0       0      45        0.0%
SFR44                0      0       0      45        0.0%
BANK20              50      0       0      46        0.0%
BITSFR45             0      0       0      46        0.0%
SFR45                0      0       0      46        0.0%
BITBANK21           50      0       0      47        0.0%
BITSFR46             0      0       0      47        0.0%
SFR46                0      0       0      47        0.0%
BANK21              50      0       0      48        0.0%
BITSFR47             0      0       0      48        0.0%
SFR47                0      0       0      48        0.0%
BITBANK22           50      0       0      49        0.0%
BITSFR48             0      0       0      49        0.0%
SFR48                0      0       0      49        0.0%
BANK22              50      0       0      50        0.0%
BITSFR49             0      0       0      50        0.0%
SFR49                0      0       0      50        0.0%
BITBANK23           50      0       0      51        0.0%
BITSFR50             0      0       0      51        0.0%
SFR50                0      0       0      51        0.0%
BANK23              50      0       0      52        0.0%
BITSFR51             0      0       0      52        0.0%
SFR51                0      0       0      52        0.0%
BITBANK24           50      0       0      53        0.0%
BITSFR52             0      0       0      53        0.0%
SFR52                0      0       0      53        0.0%
BANK24              50      0       0      54        0.0%
BITSFR53             0      0       0      54        0.0%
SFR53                0      0       0      54        0.0%
BITBANK25           20      0       0      55        0.0%
BITSFR54             0      0       0      55        0.0%
SFR54                0      0       0      55        0.0%
BANK25              20      0       0      56        0.0%
BITSFR55             0      0       0      56        0.0%
SFR55                0      0       0      56        0.0%
BITSFR56             0      0       0      57        0.0%
SFR56                0      0       0      57        0.0%
DATA                 0      0      4E      57        0.0%
BITSFR57             0      0       0      58        0.0%
SFR57                0      0       0      58        0.0%
BITSFR58             0      0       0      59        0.0%
SFR58                0      0       0      59        0.0%
BITSFR59             0      0       0      60        0.0%
SFR59                0      0       0      60        0.0%
BITSFR60             0      0       0      61        0.0%
SFR60                0      0       0      61        0.0%
BITSFR61             0      0       0      62        0.0%
SFR61                0      0       0      62        0.0%
BITSFR62             0      0       0      63        0.0%
SFR62                0      0       0      63        0.0%
BITSFR63             0      0       0      64        0.0%
SFR63                0      0       0      64        0.0%


Microchip Technology PIC Macro Assembler V1.40 build -251452761 
Symbol Table                                                                                   Fri Aug 16 12:17:29 2019

                             ___bmul@product 0054                     Store_Datas@received_data 0070  
                                __CFG_CP$OFF 0000                                           _OP 0020  
                                        l211 0157                                          l213 01AB  
                                        l208 0090                                          l955 0541  
                                        l959 0547                                          _GIE 005F  
                                        u905 0085                                          u835 0497  
                                        u915 00AF                                          u845 049D  
                                        u925 00C4                                          u855 04B7  
                                        u935 00DB                                          u865 04C5  
                                        u945 00F1                                          u875 04CB  
                                        u955 0107                                          u965 011C  
                                        u895 0075                                          u985 0135  
                                        u995 0148                                          _SeP 0030  
                                        _StP 0028                                 __CFG_BORV$LO 0000  
                                        wreg 0009                                __CFG_BBEN$OFF 0000  
                               __CFG_LVP$OFF 0000                                 __CFG_ZCD$OFF 0000  
                                       l1123 0199                                         l1205 050C  
                                       l1119 0145                                         l1209 0513  
                                       l1093 0499                                         l1099 04B9  
                                       l1199 0502                                         u1005 015A  
                                       u1015 0170                                         u1035 0189  
                                       u1045 019C                                         u1055 01AE  
                                       u1065 01BF                                         u1075 0093  
                                       u1085 00A9                                         _LATA 0018  
                                       _LATB 0019                                         _LATC 001A  
                                       _LATD 001B                                         _LATE 001C  
                                       _WPUA 1F39                                         _WPUB 1F44  
                                       _WPUC 1F4F                                         _WPUD 1F5A  
                                       _WPUE 1F65                                         _main 04EB  
                                       fsr0h 0005                                         fsr1h 0007  
                                       indf0 0000                                         fsr0l 0004  
                                       indf1 0001                                         fsr1l 0006  
                                       btemp 007E                                         start 0063  
                          ___bmul@multiplier 0055                     Organize_Datas@bus_number 0055  
                              ?_EUSART_Write 0070                                        ?_main 0070  
                              __CFG_WDTE$OFF 0000                                        _T1CLK 0211  
                                      _T1CON 020E                        Store_Datas@bus_number 0073  
                                      i1l220 035F                                        i1l172 0023  
                                      i1l174 003F                                        i1l176 0058  
                                      i1l179 005E                                        i1l973 0558  
                                      i1l969 0552                                        _OSCEN 0891  
                                      _TRISA 0012                                        _TRISB 0013  
                                      _TRISC 0014                                        _TRISD 0015  
                                      _TRISE 0016                               __CFG_FCMEN$OFF 0000  
                              __CFG_WRTB$OFF 0000                                __CFG_WRTC$OFF 0000  
                           __end_ofi1___bmul 0561                               _Organize_Datas 0070  
                             __CFG_BOREN$OFF 0000                                        pclath 000A  
                      _Initialize_Parameters 048B                                        status 0003  
               Organize_Datas@number_of_data 0053                                        wtemp0 007E  
                ?_EUSART_TxInterrupt_Control 0070                               __CFG_CSWEN$OFF 0000  
                             __CFG_MCLRE$OFF 0000                              __initialization 0065  
                               __end_of_main 053E                               __CFG_SAFEN$OFF 0000  
                             ??_EUSART_Write 0071                  ?_INTERRUPT_InterruptManager 0070  
                                     ??_main 005D                       __end_of_Organize_Datas 01CD  
                                     _ANSELA 1F38                                       _ANSELB 1F43  
                                     _ANSELC 1F4E                                       _ANSELD 1F59  
                                     _ANSELE 1F64                                       _T1GATE 0210  
                                     _T1GCON 020F                                       _RC1REG 0119  
                                     _RC2REG 0A19                                       _RC1STA 011D  
                                     _RC2STA 0A1D                                       i1l1133 036D  
                                     i1l1161 028F                                       i1l1145 03F1  
                                     i1l1137 0383                                       i1l1173 02EE  
                                     u111_25 0329                                       i1l1167 02BE  
                                     i1l1159 022B                                       _ODCONA 1F3A  
                                     _ODCONB 1F45                                       _ODCONC 1F50  
                                     _ODCOND 1F5B                                       u120_25 0398  
                                     u112_25 033D                                       _ODCONE 1F66  
                                     u121_25 03AB                                       u130_25 0420  
                                     u131_25 01E7                                       u123_25 03C0  
                                     u115_25 0354                               __CFG_WDTCCS$SC 0000  
                                     u116_25 0362                                       u133_25 0255  
                                     u125_25 03D7                                       u109_25 0318  
                                     u134_25 0261                                       u126_25 03E6  
                                     u118_25 0377                                       u127_25 03F4  
                                     u119_25 0386                                       u128_25 040C  
                                     u129_25 0411                                       _OSCFRQ 0893  
                                     _TX2REG 0A1A                                       _TX1STA 011E  
                                     _TX2STA 0A1E                               __CFG_PWRTE$OFF 0000  
                                     ___bmul 053E                 __size_of_Send_Till_EndSignal 0147  
                            ?_Organize_Datas 0052                       ?_Initialize_Parameters 0070  
                    __end_of__initialization 006C                          ___bmul@multiplicand 0052  
                             __pcstackCOMMON 0070                                    ?i1___bmul 0070  
                           i1___bmul@product 0073                                   __pbssBANK0 0020  
                              ??_Store_Datas 0075                         __end_of_EUSART_Write 057B  
                                 __pmaintext 04EB                                      ?___bmul 0052  
                                 __pintentry 0004                                   ??i1___bmul 0071  
                        __CFG_RSTOSC$HFINT32 0000                Send_Till_EndSignal@bus_number 007A  
                       Send_Till_EndSignal@a 004F                            Store_Datas@Buffer 007A  
                                    _SP1BRGH 011C                                      _SP1BRGL 011B  
                                    _SP2BRGH 0A1C                                      _SP2BRGL 0A1B  
                                    _OSCCON1 088D                                      _OSCCON3 088F  
                                    _OSCSTAT 0890                                      _OSCTUNE 0892  
                                    _PPSLOCK 1E8F                                      _Buffer0 0039  
                                    _Buffer1 003E                                      _RxData0 0047  
                                    _RxData1 0049                                      _TxData0 0043  
                         _not_of_before_data 0038                          __end_of_Store_Datas 042B  
                            __size_of___bmul 0012                              __CFG_STVREN$OFF 0000  
                                    __ptext1 0561                                      __ptext2 042B  
                                    __ptext3 0070                                      __ptext4 048B  
                                    __ptext5 053E                                      __ptext7 0314  
                                    __ptext8 01CD                                      __ptext9 0550  
                            __CFG_WRTAPP$OFF 0000                                    _T1CONbits 020E  
                   ??_PIN_MANAGER_Initialize 0052                                    _IOCAFbits 1F3F  
                            __CFG_WRTSAF$OFF 0000                          i1___bmul@multiplier 0072  
                                  _IOCANbits 1F3E                                    _IOCAPbits 1F3D  
                                    clrloop0 0572                         end_of_initialization 006C  
                        _Send_Till_EndSignal 01CD                         ?_Send_Till_EndSignal 0074  
                      __CFG_WDTCPS$WDTCPS_31 0000                                   _setup_TMR1 0561  
                           ??_Organize_Datas 0057                      ??_Initialize_Parameters 0056  
                                  _TRISDbits 0015                        __size_of_EUSART_Write 0004  
                           __CFG_FEXTOSC$OFF 0000                                  _Store_Datas 0314  
     Send_Till_EndSignal@txinterrupt_control 0076                        ??_Send_Till_EndSignal 004B  
                             __end_of___bmul 0550                                 _EUSART_Write 0577  
          Store_Datas@number_of_receive_data 0071                            __size_ofi1___bmul 0011  
                        start_initialization 0065              __size_of_PIN_MANAGER_Initialize 0060  
                           __CFG_LPBOREN$OFF 0000                                     ??___bmul 0053  
                                ?_setup_TMR1 0070                                    ___latbits 0003  
                              __pcstackBANK0 004B                       _PIN_MANAGER_Initialize 042B  
               ??_EUSART_TxInterrupt_Control 0071                             __CFG_PPS1WAY$OFF 0000  
               ??_INTERRUPT_InterruptManager 007C                                     _BAUD1CON 011F  
                                   _BAUD2CON 0A1F  EUSART_TxInterrupt_Control@enable_or_disable 0070  
        __size_of_EUSART_TxInterrupt_Control 0007                                     _LATAbits 0018  
                                   _LATCbits 001A                                     _LATDbits 001B  
                        __size_of_setup_TMR1 0009                                    clear_ram0 0571  
                                   _PIE3bits 0719                        i1___bmul@multiplicand 0070  
        __size_of_INTERRUPT_InterruptManager 005F                                     _PIR3bits 070F  
                          __CFG_BBSIZE$BB512 0000                       Initialize_Parameters@i 0035  
                                   i1___bmul 0550                                 _RX1DTPPSbits 1ECB  
                               _RX2DTPPSbits 1ECD                      main@display_reset_count 005E  
             __size_of_Initialize_Parameters 0060                __end_of_Initialize_Parameters 04EB  
                               ?_Store_Datas 0070                                   _I2C_status 0037  
                                   __ptext10 0577                                     __ptext11 056A  
                              __size_of_main 0053                         __CFG_WDTCWS$WDTCWS_7 0000  
                __end_of_Send_Till_EndSignal 0314           __end_of_EUSART_TxInterrupt_Control 0571  
                 _EUSART_TxInterrupt_Control 056A                         Organize_Datas@Buffer 0052  
                       Organize_Datas@RxData 005C                                     int$flags 007E  
                  Send_Till_EndSignal@TxData 0051           __end_of_INTERRUPT_InterruptManager 0063  
                 _INTERRUPT_InterruptManager 0004                                 ??_setup_TMR1 0052  
            Send_Till_EndSignal@transmission 0074                  PIN_MANAGER_Initialize@state 0052  
                                _OSCSTATbits 0890                                   _INTCONbits 000B  
                                   intlevel1 0000                      __size_of_Organize_Datas 015D  
                    ?_PIN_MANAGER_Initialize 0070                            __CFG_CLKOUTEN$OFF 0000  
                         __end_of_setup_TMR1 056A                                  _PPSLOCKbits 1E8F  
        Send_Till_EndSignal@number_of_txdata 0078                           EUSART_Write@txData 0070  
             __end_of_PIN_MANAGER_Initialize 048B                         __size_of_Store_Datas 0117  
